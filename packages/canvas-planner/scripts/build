#!/bin/bash

echo '############################################################'
echo '# Building fully Babelified CommonJS version of the module #'
echo '############################################################'
yarn run build:lib

# Commenting this out for now since canvas only actually uses the CJS version.
# echo '############################################################'
# echo '#    Building fully Babelified ES version of the module    #'
# echo '############################################################'
# yarn run build:es

# Package it in a clean folder canvas can consume.
# This is because if we just link to it like
# "canvas-planner": "file:./packages/canvas-planner",
# in Canvas's package.json, it will copy _everything_ in this dir to
# <canvas>/node_modules/canvas-planner
# including everything in canvas-planner's node_modules directory. By publishing
# to a clean folder with just the files we we would have published to npm,
# it mimic's the same behavior as if we were getting it from the registry.
rm -rf copy-of-what-gets-published-to-npm-registry
mkdir -p copy-of-what-gets-published-to-npm-registry
cp -r config lib README.md package.json copy-of-what-gets-published-to-npm-registry
