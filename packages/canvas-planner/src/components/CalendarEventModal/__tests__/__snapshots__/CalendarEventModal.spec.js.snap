// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Calendar Event Details"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[MockFunction]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={true}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="small"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <Heading
      border="none"
      color="inherit"
      level="h2"
    >
      <Button
        as="button"
        cursor="pointer"
        display="inline-block"
        elementRef={[Function]}
        href="http://example.com"
        margin="0"
        size="large"
        textAlign="center"
        theme={
          Object {
            "largeHeight": "normal",
            "largePadding": "0",
          }
        }
        type="button"
        variant="link"
        withBackground={true}
      >
        event title
      </Button>
    </Heading>
    <CloseButton
      as="button"
      cursor="pointer"
      margin="0"
      offset="x-small"
      onClick={[MockFunction]}
      placement="end"
      size="small"
      type="button"
    >
      Close
    </CloseButton>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <List
      as="ul"
      delimiter="none"
      elementRef={[Function]}
      isUnstyled={false}
      itemSpacing="small"
      size="medium"
      variant="unstyled"
    >
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Calendar:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            the course
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Date & Time:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            Sep 27, 2018 1:00 PM - 2:00 PM
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Location:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            somewhere
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Address:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            here, specifically
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        margin="large 0 0 0"
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Details:
        </Text>
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": "about this event",
            }
          }
        />
      </ListItem>
    </List>
  </ModalBody>
</Modal>
`;

exports[`renders with allDay 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Calendar Event Details"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[MockFunction]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={true}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="small"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <Heading
      border="none"
      color="inherit"
      level="h2"
    >
      <Button
        as="button"
        cursor="pointer"
        display="inline-block"
        elementRef={[Function]}
        href="http://example.com"
        margin="0"
        size="large"
        textAlign="center"
        theme={
          Object {
            "largeHeight": "normal",
            "largePadding": "0",
          }
        }
        type="button"
        variant="link"
        withBackground={true}
      >
        event title
      </Button>
    </Heading>
    <CloseButton
      as="button"
      cursor="pointer"
      margin="0"
      offset="x-small"
      onClick={[MockFunction]}
      placement="end"
      size="small"
      type="button"
    >
      Close
    </CloseButton>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <List
      as="ul"
      delimiter="none"
      elementRef={[Function]}
      isUnstyled={false}
      itemSpacing="small"
      size="medium"
      variant="unstyled"
    >
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Calendar:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            the course
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Date & Time:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            Sep 27, 2018
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Location:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            somewhere
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Address:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            here, specifically
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        margin="large 0 0 0"
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Details:
        </Text>
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": "about this event",
            }
          }
        />
      </ListItem>
    </List>
  </ModalBody>
</Modal>
`;

exports[`renders with only the startTime 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Calendar Event Details"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[MockFunction]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={true}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="small"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <Heading
      border="none"
      color="inherit"
      level="h2"
    >
      <Button
        as="button"
        cursor="pointer"
        display="inline-block"
        elementRef={[Function]}
        href="http://example.com"
        margin="0"
        size="large"
        textAlign="center"
        theme={
          Object {
            "largeHeight": "normal",
            "largePadding": "0",
          }
        }
        type="button"
        variant="link"
        withBackground={true}
      >
        event title
      </Button>
    </Heading>
    <CloseButton
      as="button"
      cursor="pointer"
      margin="0"
      offset="x-small"
      onClick={[MockFunction]}
      placement="end"
      size="small"
      type="button"
    >
      Close
    </CloseButton>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <List
      as="ul"
      delimiter="none"
      elementRef={[Function]}
      isUnstyled={false}
      itemSpacing="small"
      size="medium"
      variant="unstyled"
    >
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Calendar:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            the course
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Date & Time:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            Sep 27, 2018 1:00 PM
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Location:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            somewhere
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Address:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            here, specifically
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        margin="large 0 0 0"
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Details:
        </Text>
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": "about this event",
            }
          }
        />
      </ListItem>
    </List>
  </ModalBody>
</Modal>
`;

exports[`renders with user displayName for calendar 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Calendar Event Details"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[MockFunction]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={true}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="small"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <Heading
      border="none"
      color="inherit"
      level="h2"
    >
      <Button
        as="button"
        cursor="pointer"
        display="inline-block"
        elementRef={[Function]}
        href="http://example.com"
        margin="0"
        size="large"
        textAlign="center"
        theme={
          Object {
            "largeHeight": "normal",
            "largePadding": "0",
          }
        }
        type="button"
        variant="link"
        withBackground={true}
      >
        event title
      </Button>
    </Heading>
    <CloseButton
      as="button"
      cursor="pointer"
      margin="0"
      offset="x-small"
      onClick={[MockFunction]}
      placement="end"
      size="small"
      type="button"
    >
      Close
    </CloseButton>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <List
      as="ul"
      delimiter="none"
      elementRef={[Function]}
      isUnstyled={false}
      itemSpacing="small"
      size="medium"
      variant="unstyled"
    >
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Calendar:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            me
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Date & Time:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            Sep 27, 2018 1:00 PM - 2:00 PM
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Location:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            somewhere
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Address:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            here, specifically
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        margin="large 0 0 0"
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Details:
        </Text>
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": "about this event",
            }
          }
        />
      </ListItem>
    </List>
  </ModalBody>
</Modal>
`;

exports[`renders without address 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Calendar Event Details"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[MockFunction]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={true}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="small"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <Heading
      border="none"
      color="inherit"
      level="h2"
    >
      <Button
        as="button"
        cursor="pointer"
        display="inline-block"
        elementRef={[Function]}
        href="http://example.com"
        margin="0"
        size="large"
        textAlign="center"
        theme={
          Object {
            "largeHeight": "normal",
            "largePadding": "0",
          }
        }
        type="button"
        variant="link"
        withBackground={true}
      >
        event title
      </Button>
    </Heading>
    <CloseButton
      as="button"
      cursor="pointer"
      margin="0"
      offset="x-small"
      onClick={[MockFunction]}
      placement="end"
      size="small"
      type="button"
    >
      Close
    </CloseButton>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <List
      as="ul"
      delimiter="none"
      elementRef={[Function]}
      isUnstyled={false}
      itemSpacing="small"
      size="medium"
      variant="unstyled"
    >
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Calendar:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            the course
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Date & Time:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            Sep 27, 2018 1:00 PM - 2:00 PM
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Location:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            somewhere
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        margin="large 0 0 0"
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Details:
        </Text>
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": "about this event",
            }
          }
        />
      </ListItem>
    </List>
  </ModalBody>
</Modal>
`;

exports[`renders without details 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Calendar Event Details"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[MockFunction]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={true}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="small"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <Heading
      border="none"
      color="inherit"
      level="h2"
    >
      <Button
        as="button"
        cursor="pointer"
        display="inline-block"
        elementRef={[Function]}
        href="http://example.com"
        margin="0"
        size="large"
        textAlign="center"
        theme={
          Object {
            "largeHeight": "normal",
            "largePadding": "0",
          }
        }
        type="button"
        variant="link"
        withBackground={true}
      >
        event title
      </Button>
    </Heading>
    <CloseButton
      as="button"
      cursor="pointer"
      margin="0"
      offset="x-small"
      onClick={[MockFunction]}
      placement="end"
      size="small"
      type="button"
    >
      Close
    </CloseButton>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <List
      as="ul"
      delimiter="none"
      elementRef={[Function]}
      isUnstyled={false}
      itemSpacing="small"
      size="medium"
      variant="unstyled"
    >
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Calendar:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            the course
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Date & Time:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            Sep 27, 2018 1:00 PM - 2:00 PM
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Location:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            somewhere
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Address:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            here, specifically
          </Text>
        </View>
      </ListItem>
    </List>
  </ModalBody>
</Modal>
`;

exports[`renders without location 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Calendar Event Details"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[MockFunction]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={true}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="small"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <Heading
      border="none"
      color="inherit"
      level="h2"
    >
      <Button
        as="button"
        cursor="pointer"
        display="inline-block"
        elementRef={[Function]}
        href="http://example.com"
        margin="0"
        size="large"
        textAlign="center"
        theme={
          Object {
            "largeHeight": "normal",
            "largePadding": "0",
          }
        }
        type="button"
        variant="link"
        withBackground={true}
      >
        event title
      </Button>
    </Heading>
    <CloseButton
      as="button"
      cursor="pointer"
      margin="0"
      offset="x-small"
      onClick={[MockFunction]}
      placement="end"
      size="small"
      type="button"
    >
      Close
    </CloseButton>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <List
      as="ul"
      delimiter="none"
      elementRef={[Function]}
      isUnstyled={false}
      itemSpacing="small"
      size="medium"
      variant="unstyled"
    >
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Calendar:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            the course
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Date & Time:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            Sep 27, 2018 1:00 PM - 2:00 PM
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Address:
        </Text>
        <View
          borderColor="primary"
          display="auto"
          focusColor="info"
          focusPosition="offset"
          margin="0 0 0 x-small"
          overflowX="visible"
          overflowY="visible"
          position="static"
          shouldAnimateFocus={true}
          withVisualDebug={false}
        >
          <Text
            as="span"
            letterSpacing="normal"
            size="medium"
            wrap="normal"
          >
            here, specifically
          </Text>
        </View>
      </ListItem>
      <ListItem
        delimiter="none"
        elementRef={[Function]}
        margin="large 0 0 0"
        padding="none"
        size="medium"
        spacing="none"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Details:
        </Text>
        <div
          dangerouslySetInnerHTML={
            Object {
              "__html": "about this event",
            }
          }
        />
      </ListItem>
    </List>
  </ModalBody>
</Modal>
`;
