// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders nothing if no opportunities 1`] = `
<div
  className="Opportunities-styles__root"
  id="opportunities_parent"
  onKeyDown={[Function]}
  style={
    Object {
      "maxHeight": "none",
    }
  }
>
  <CloseButton
    as="button"
    buttonRef={[Function]}
    cursor="pointer"
    margin="0"
    offset="x-small"
    onClick={[Function]}
    placement="end"
    size="small"
    type="button"
    variant="icon"
  >
    Close Opportunity Center popup
  </CloseButton>
  <Tabs
    elementRef={[Function]}
    id="Opportunities-styles__tabs_container"
    onRequestTabChange={[Function]}
    shouldFocusOnRender={false}
    tabOverflow="stack"
    variant="default"
  >
    <Panel
      elementRef={[Function]}
      isDisabled={false}
      isSelected={true}
      labelledBy={null}
      maxHeight="auto"
      padding="small"
      renderTitle={
        <AccessibleContent
          alt="New Opportunities"
          as="span"
        >
          New
        </AccessibleContent>
      }
      textAlign="start"
      variant="default"
    >
      <div>
        Nothing new needs attention.
      </div>
    </Panel>
    <Panel
      elementRef={[Function]}
      isDisabled={false}
      isSelected={false}
      labelledBy={null}
      maxHeight="auto"
      padding="small"
      renderTitle={
        <AccessibleContent
          alt="Dismissed Opportunities"
          as="span"
        >
          Dismissed
        </AccessibleContent>
      }
      textAlign="start"
      variant="default"
    >
      <div>
        Nothing here needs attention.
      </div>
    </Panel>
  </Tabs>
</div>
`;

exports[`renders the base component correctly with one of each kind of opportunity 1`] = `
<div
  className="Opportunities-styles__root"
  id="opportunities_parent"
  onKeyDown={[Function]}
  style={
    Object {
      "maxHeight": "none",
    }
  }
>
  <CloseButton
    as="button"
    buttonRef={[Function]}
    cursor="pointer"
    margin="0"
    offset="x-small"
    onClick={[Function]}
    placement="end"
    size="small"
    type="button"
    variant="icon"
  >
    Close Opportunity Center popup
  </CloseButton>
  <Tabs
    elementRef={[Function]}
    id="Opportunities-styles__tabs_container"
    onRequestTabChange={[Function]}
    shouldFocusOnRender={false}
    tabOverflow="stack"
    variant="default"
  >
    <Panel
      elementRef={[Function]}
      isDisabled={false}
      isSelected={true}
      labelledBy={null}
      maxHeight="auto"
      padding="small"
      renderTitle={
        <AccessibleContent
          alt="New Opportunities"
          as="span"
        >
          New
        </AccessibleContent>
      }
      textAlign="start"
      variant="default"
    >
      <ol
        className="Opportunities-styles__list"
      >
        <li
          className="Opportunities-styles__item"
          key="1"
        >
          <Animatable(Opportunity)
            animatableIndex={0}
            courseName="Course Short Name"
            dismiss={[Function]}
            dueAt="2017-03-09T20:40:35Z"
            id="1"
            opportunityTitle="learning object title"
            timeZone="America/Denver"
            url="http://www.non_default_url.com"
          />
        </li>
      </ol>
    </Panel>
    <Panel
      elementRef={[Function]}
      isDisabled={false}
      isSelected={false}
      labelledBy={null}
      maxHeight="auto"
      padding="small"
      renderTitle={
        <AccessibleContent
          alt="Dismissed Opportunities"
          as="span"
        >
          Dismissed
        </AccessibleContent>
      }
      textAlign="start"
      variant="default"
    >
      <ol
        className="Opportunities-styles__list"
      >
        <li
          className="Opportunities-styles__item"
          key="2"
        >
          <Animatable(Opportunity)
            animatableIndex={0}
            courseName="Course Short Name"
            dismiss={null}
            dueAt="2017-03109T20:40:35Z"
            id="2"
            opportunityTitle="another learning object title"
            timeZone="America/Denver"
            url="http://www.non_default_url.com"
          />
        </li>
      </ol>
    </Panel>
  </Tabs>
</div>
`;

exports[`renders the right course with the right opportunity 1`] = `
<div
  className="Opportunities-styles__root"
  id="opportunities_parent"
  onKeyDown={[Function]}
  style={
    Object {
      "maxHeight": "none",
    }
  }
>
  <CloseButton
    as="button"
    buttonRef={[Function]}
    cursor="pointer"
    margin="0"
    offset="x-small"
    onClick={[Function]}
    placement="end"
    size="small"
    type="button"
    variant="icon"
  >
    Close Opportunity Center popup
  </CloseButton>
  <Tabs
    elementRef={[Function]}
    id="Opportunities-styles__tabs_container"
    onRequestTabChange={[Function]}
    shouldFocusOnRender={false}
    tabOverflow="stack"
    variant="default"
  >
    <Panel
      elementRef={[Function]}
      isDisabled={false}
      isSelected={true}
      labelledBy={null}
      maxHeight="auto"
      padding="small"
      renderTitle={
        <AccessibleContent
          alt="New Opportunities"
          as="span"
        >
          New
        </AccessibleContent>
      }
      textAlign="start"
      variant="default"
    >
      <ol
        className="Opportunities-styles__list"
      >
        <li
          className="Opportunities-styles__item"
          key="1"
        >
          <Animatable(Opportunity)
            animatableIndex={0}
            courseName="Course Short Name"
            dismiss={[Function]}
            dueAt="2017-03-09T20:40:35Z"
            id="1"
            opportunityTitle="learning object title"
            timeZone="America/Denver"
            url="http://www.non_default_url.com"
          />
        </li>
        <li
          className="Opportunities-styles__item"
          key="2"
        >
          <Animatable(Opportunity)
            animatableIndex={1}
            courseName="A different Course Name"
            dismiss={[Function]}
            dueAt="2017-03-09T20:40:35Z"
            id="2"
            opportunityTitle="other learning object"
            timeZone="America/Denver"
            url="http://www.non_default_url.com"
          />
        </li>
      </ol>
    </Panel>
    <Panel
      elementRef={[Function]}
      isDisabled={false}
      isSelected={false}
      labelledBy={null}
      maxHeight="auto"
      padding="small"
      renderTitle={
        <AccessibleContent
          alt="Dismissed Opportunities"
          as="span"
        >
          Dismissed
        </AccessibleContent>
      }
      textAlign="start"
      variant="default"
    >
      <ol
        className="Opportunities-styles__list"
      >
        <li
          className="Opportunities-styles__item"
          key="2"
        >
          <Animatable(Opportunity)
            animatableIndex={0}
            courseName="Course Short Name"
            dismiss={null}
            dueAt="2017-03109T20:40:35Z"
            id="2"
            opportunityTitle="another learning object title"
            timeZone="America/Denver"
            url="http://www.non_default_url.com"
          />
        </li>
      </ol>
    </Panel>
  </Tabs>
</div>
`;
