{
  "name": "submission_created",
  "definition": "The event is emitted anytime an end user or API request submits or re-submits an assignment.",
  "trigger": "Triggered when a submission gets updated and has not yet been submitted.",
  "schema": {
    "assignment_id": "The Canvas id of the assignment being submitted.",
    "attempt": "This is the submission attempt number.",
    "body": "The content of the submission, if it was submitted directly in a text field. NOTE: This field will be truncated to only include the first 8192 characters.",
    "grade": "The grade for the submission, translated into the assignment grading scheme (so a letter grade, for example)",
    "graded_at": "The timestamp when the assignment was graded, if it was graded.",
    "group_id": "The submissionsâ€™s group ID if the assignment is a group assignment.",
    "late": "Whether the submission was made after the applicable due date.",
    "lti_assignment_id": "The LTI assignment guid of the submission's assignment",
    "lti_user_id": "The Lti id of the user associated with the submission.",
    "missing": "Whether the submission is missing, which generally means past-due and not yet submitted.",
    "score": "The raw score",
    "submission_id": "The Canvas id of the new submission.",
    "submission_type": "The types of submission (basic_lti_launch, discussion_topic, media_recording, online_quiz, online_text_entry, online_upload, online_url)",
    "submitted_at": "The timestamp when the assignment was submitted.",
    "workflow_state": "The state of the submission: normally 'submitted' or 'pending_review'.",
    "updated_at": "The time at which this assignment was last modified in any way",
    "url": "The URL of the submission (for 'online_url' submissions)",
    "user_id": "The Canvas id of the user associated with the submission."
  },
  "examples": [
    {
      "payload": {
        "metadata": {
          "client_ip": "93.184.216.34",
          "event_name": "submission_created",
          "event_time": "2019-11-01T19:11:21.419Z",
          "hostname": "oxana.instructure.com",
          "http_method": "POST",
          "producer": "canvas",
          "referrer": null,
          "request_id": "1dd9dc6f-2fb0-4c19-a6c5-7ee1bf3ed295",
          "root_account_id": "21070000000000001",
          "root_account_lti_guid": "VicYj3cu5BIFpoZhDVU4DZumnlBrWi1grgJEzADs.oxana.instructure.com",
          "root_account_uuid": "VicYj3cu5BIFpoZhDVU4DZumnlBrWi1grgJEzADs",
          "session_id": "ef686f8ed684abf78cbfa1f6a58112b5",
          "url": "https://oxana.instructure.com/api/lti/v1/tools/453919/grade_passback",
          "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36"
        },
        "body": {
          "assignment_id": "21070000001234012",
          "attempt": 12,
          "body": "Test Submission Data",
          "grade": "Missing",
          "graded_at": "2019-11-01T19:11:21.419Z",
          "group_id": "120123",
          "late": false,
          "lti_assignment_id": "a1b2c3c4-z9x8-a1s2-q5w6-p9o8i7u6y5t6",
          "lti_user_id": "a1b2c3c4z9x8a1s2q5w6p9o8i7u6y5t6a2s3d4f5",
          "missing": false,
          "score": 99.5,
          "submission_id": "21070000012345567",
          "submission_type": "online_text_entry",
          "submitted_at": "2019-11-01T19:11:21.419Z",
          "updated_at": "2019-11-01T19:11:21.419Z",
          "url": "https://test.submission.net",
          "user_id": "21070000000014012",
          "workflow_state": "submitted"
        }
      }
    }
  ]
}
