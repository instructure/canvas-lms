{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-tokeninput.min.js","webpack:///webpack/bootstrap d565fa7672eea8600b30","webpack:///./index.js","webpack:///./lib/main.js","webpack:///./lib/option.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./lib/combobox.js","webpack:///./lib/token.js","webpack:///./lib/add-class.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","TokenInput","Option","React","Combobox","createFactory","Token","ul","li","createClass","displayName","propTypes","onInput","PropTypes","func","onSelect","isRequired","onRemove","selected","array","menuContent","any","getInitialState","selectedToken","handleClick","refs","getDOMNode","querySelector","focus","handleInput","event","props","handleSelect","setState","handleRemove","value","handleRemoveLast","length","render","tokens","map","token","name","key","bind","className","onClick","ref","ariaLabel","onRemoveLast","state","addClass","div","label","string","getDefaultProps","role","tabIndex","isSelected","ariaSelected","getLabel","component","children","guid","k","ComboboxOption","span","input","autocomplete","inputValue","findInitialInputValue","isOpen","focusedIndex","matchedAutocompleteOption","usingKeyboard","activedescendant","listId","menu","isEmpty","componentWillMount","makeMenu","componentWillReceiveProps","newProps","document","activeElement","showList","hideList","Children","forEach","child","index","type","onBlur","handleOptionBlur","selectOption","onFocus","handleOptionFocus","onKeyDown","handleOptionKeyDown","onMouseEnter","handleOptionMouseEnter","getClassName","clearSelectedState","cb","handleInputChange","handleInputBlur","focusedAnOption","maybeSelectAutocompletedOption","blurTimer","setTimeout","clearTimeout","handleInputKeyUp","keyCode","match","handleButtonClick","focusInput","hideOnEscape","preventDefault","selectInput","select","inputKeydownMap",8,13,27,38,40,"optionKeydownMap","handleKeydown","handlerName","focusOptionAtIndex","selectOnEnter","selectText","options","focusNext","removeLastToken","focusPrevious","last","focusSelectedOption","selectedIndex","focusOption","list","childNodes","autoComplete","spellCheck","aria-label","aria-expanded","aria-haspopup","aria-activedescendant","aria-autocomplete","aria-owns","onChange","onKeyUp","aria-hidden","DOM","handleKeyDown","enterKey","existing","added","indexOf"],"mappings":"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","file":"react-tokeninput.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TokenInput\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"TokenInput\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TokenInput\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"TokenInput\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar TokenInput = __webpack_require__(1)\n\tTokenInput.Option = __webpack_require__(2)\n\n\tmodule.exports = TokenInput\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar React = __webpack_require__(3);\n\tvar Combobox = React.createFactory(__webpack_require__(4));\n\tvar Token = React.createFactory(__webpack_require__(5));\n\n\tvar ul = React.createFactory('ul');\n\tvar li = React.createFactory('li');\n\n\tmodule.exports = React.createClass({displayName: \"exports\",\n\t  propTypes: {\n\t    onInput: React.PropTypes.func,\n\t    onSelect: React.PropTypes.func.isRequired,\n\t    onRemove: React.PropTypes.func.isRequired,\n\t    selected: React.PropTypes.array.isRequired,\n\t    menuContent: React.PropTypes.any\n\t  },\n\n\t  getInitialState: function() {\n\t    return {\n\t      selectedToken: null\n\t    };\n\t  },\n\n\t  handleClick: function() {\n\t    // TODO: Expand combobox API for focus\n\t    this.refs['combo-li'].getDOMNode().querySelector('input').focus();\n\t  },\n\n\t  handleInput: function(event) {\n\t    this.props.onInput(event);\n\t  },\n\n\t  handleSelect: function(event) {\n\t    this.props.onSelect(event)\n\t    this.setState({\n\t      selectedToken: null\n\t    })\n\t  },\n\n\t  handleRemove: function(value) {\n\t    this.props.onRemove(value);\n\t    this.refs['combo-li'].getDOMNode().querySelector('input').focus();\n\t  },\n\n\t  handleRemoveLast: function() {\n\t    this.props.onRemove(this.props.selected[this.props.selected.length - 1]);\n\t  },\n\n\t  render: function() {\n\t    var tokens = this.props.selected.map(function(token) {\n\t      return (\n\t        Token({\n\t          onRemove: this.handleRemove,\n\t          value: token,\n\t          name: token.name,\n\t          key: token.id})\n\t      )\n\t    }.bind(this))\n\n\t    return ul({className: 'ic-tokens flex', onClick: this.handleClick},\n\t      tokens,\n\t      li({className: 'inline-flex', ref: 'combo-li'},\n\t        Combobox({\n\t          id: this.props.id,\n\t          ariaLabel: this.props['combobox-aria-label'],\n\t          onInput: this.handleInput,\n\t          onSelect: this.handleSelect,\n\t          onRemoveLast: this.handleRemoveLast,\n\t          value: this.state.selectedToken\n\t        },\n\t          this.props.menuContent\n\t        )\n\t      )\n\t    );\n\t  }\n\t})\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar React = __webpack_require__(3);\n\tvar addClass = __webpack_require__(6);\n\tvar div = React.createFactory('div');\n\n\tmodule.exports = React.createClass({displayName: \"exports\",\n\n\t  propTypes: {\n\n\t    /**\n\t     * The value that will be sent to the `onSelect` handler of the\n\t     * parent Combobox.\n\t    */\n\t    value: React.PropTypes.any.isRequired,\n\n\t    /**\n\t     * What value to put into the input element when this option is\n\t     * selected, defaults to its children coerced to a string.\n\t    */\n\t    label: React.PropTypes.string\n\t  },\n\n\t  getDefaultProps: function() {\n\t    return {\n\t      role: 'option',\n\t      tabIndex: '-1',\n\t      className: 'ic-tokeninput-option',\n\t      isSelected: false\n\t    };\n\t  },\n\n\t  render: function() {\n\t    var props = this.props;\n\t    if (props.isSelected) {\n\t      props.className = addClass(props.className, 'ic-tokeninput-selected');\n\t      props.ariaSelected = true;\n\t    }\n\t    return div(props);\n\t  }\n\n\t});\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar React = __webpack_require__(3);\n\tvar guid = 0;\n\tvar k = function(){};\n\tvar addClass = __webpack_require__(6);\n\tvar ComboboxOption = React.createFactory(__webpack_require__(2));\n\n\tvar div = React.createFactory('div');\n\tvar span = React.createFactory('span');\n\tvar input = React.createFactory('input');\n\n\tmodule.exports = React.createClass({displayName: \"exports\",\n\n\t  propTypes: {\n\t    /**\n\t     * Called when the combobox receives user input, this is your chance to\n\t     * filter the data and rerender the options.\n\t     *\n\t     * Signature:\n\t     *\n\t     * ```js\n\t     * function(userInput){}\n\t     * ```\n\t    */\n\t    onInput: React.PropTypes.func,\n\n\t    /**\n\t     * Called when the combobox receives a selection. You probably want to reset\n\t     * the options to the full list at this point.\n\t     *\n\t     * Signature:\n\t     *\n\t     * ```js\n\t     * function(selectedValue){}\n\t     * ```\n\t    */\n\t    onSelect: React.PropTypes.func\n\t  },\n\n\t  getDefaultProps: function() {\n\t    return {\n\t      autocomplete: 'both',\n\t      onInput: k,\n\t      onSelect: k,\n\t      value: null\n\t    };\n\t  },\n\n\t  getInitialState: function() {\n\t    return {\n\t      value: this.props.value,\n\t      // the value displayed in the input\n\t      inputValue: this.findInitialInputValue(),\n\t      isOpen: false,\n\t      focusedIndex: null,\n\t      matchedAutocompleteOption: null,\n\t      // this prevents crazy jumpiness since we focus options on mouseenter\n\t      usingKeyboard: false,\n\t      activedescendant: null,\n\t      listId: 'ic-tokeninput-list-'+(++guid),\n\t      menu: {\n\t        children: [],\n\t        activedescendant: null,\n\t        isEmpty: true\n\t      }\n\t    };\n\t  },\n\n\t  componentWillMount: function() {\n\t    this.setState({menu: this.makeMenu()});\n\t  },\n\n\t  componentWillReceiveProps: function(newProps) {\n\t    this.setState({menu: this.makeMenu(newProps.children)}, function() {\n\t      if(newProps.children.length && (this.isOpen || document.activeElement === this.refs.input.getDOMNode())) {\n\t        this.showList();\n\t      } else {\n\t        this.hideList();\n\t      }\n\n\t    }.bind(this));\n\t  },\n\n\t  /**\n\t   * We don't create the <ComboboxOption> components, the user supplies them,\n\t   * so before rendering we attach handlers to facilitate communication from\n\t   * the ComboboxOption to the Combobox.\n\t  */\n\t  makeMenu: function(children) {\n\t    var activedescendant;\n\t    var isEmpty = true;\n\t    children = children || this.props.children;\n\n\t    // Should this instead use React.addons.cloneWithProps or React.cloneElement?\n\t    React.Children.forEach(children, function(child, index) {\n\t      if (child.type !== ComboboxOption.type)\n\t        // allow random elements to live in this list\n\t        return;\n\t      isEmpty = false;\n\t      // TODO: cloneWithProps and map instead of altering the children in-place\n\t      var props = child.props;\n\t      if (this.state.value === props.value) {\n\t        // need an ID for WAI-ARIA\n\t        props.id = props.id || 'ic-tokeninput-selected-'+(++guid);\n\t        props.isSelected = true\n\t        activedescendant = props.id;\n\t      }\n\t      props.onBlur = this.handleOptionBlur;\n\t      props.onClick = this.selectOption.bind(this, child);\n\t      props.onFocus = this.handleOptionFocus;\n\t      props.onKeyDown = this.handleOptionKeyDown.bind(this, child);\n\t      props.onMouseEnter = this.handleOptionMouseEnter.bind(this, index);\n\t    }.bind(this));\n\n\t    return {\n\t      children: children,\n\t      activedescendant: activedescendant,\n\t      isEmpty: isEmpty\n\t    };\n\t  },\n\n\t  getClassName: function() {\n\t    var className = addClass(this.props.className, 'ic-tokeninput');\n\t    if (this.state.isOpen)\n\t      className = addClass(className, 'ic-tokeninput-is-open');\n\t    return className;\n\t  },\n\n\t  /**\n\t   * When the user begins typing again we need to clear out any state that has\n\t   * to do with an existing or potential selection.\n\t  */\n\t  clearSelectedState: function(cb) {\n\t    this.setState({\n\t      focusedIndex: null,\n\t      inputValue: null,\n\t      value: null,\n\t      matchedAutocompleteOption: null,\n\t      activedescendant: null\n\t    }, cb);\n\t  },\n\n\t  handleInputChange: function(event) {\n\t    var value = this.refs.input.getDOMNode().value;\n\t    this.clearSelectedState(function() {\n\t      this.props.onInput(value);\n\t    }.bind(this));\n\t  },\n\n\t  handleInputBlur: function() {\n\t    var focusedAnOption = this.state.focusedIndex != null;\n\t    if (focusedAnOption)\n\t      return;\n\t    this.maybeSelectAutocompletedOption();\n\t    this.hideList();\n\t  },\n\n\t  handleOptionBlur: function() {\n\t    // don't want to hide the list if we focused another option\n\t    this.blurTimer = setTimeout(this.hideList, 0);\n\t  },\n\n\t  handleOptionFocus: function() {\n\t    // see `handleOptionBlur`\n\t    clearTimeout(this.blurTimer);\n\t  },\n\n\t  handleInputKeyUp: function(event) {\n\t    if (\n\t      this.state.menu.isEmpty ||\n\t      // autocompleting while backspacing feels super weird, so let's not\n\t      event.keyCode === 8 /*backspace*/ ||\n\t      !this.props.autocomplete.match(/both|inline/)\n\t    ) return;\n\t  },\n\n\t  handleButtonClick: function() {\n\t    this.state.isOpen ? this.hideList() : this.showList();\n\t    this.focusInput();\n\t  },\n\n\t  showList: function() {\n\t    if(!this.state.menu.children.length) {\n\t      return\n\t    }\n\t    this.setState({isOpen: true})\n\t  },\n\n\t  hideList: function() {\n\t    this.setState({isOpen: false});\n\t  },\n\n\t  hideOnEscape: function(event) {\n\t    this.hideList();\n\t    this.focusInput();\n\t    event.preventDefault();\n\t  },\n\n\t  focusInput: function() {\n\t    this.refs.input.getDOMNode().focus();\n\t  },\n\n\t  selectInput: function() {\n\t    this.refs.input.getDOMNode().select();\n\t  },\n\n\t  inputKeydownMap: {\n\t    8: 'removeLastToken',\n\t    13: 'selectOnEnter',\n\t    27: 'hideOnEscape',\n\t    38: 'focusPrevious',\n\t    40: 'focusNext'\n\t  },\n\n\t  optionKeydownMap: {\n\t    13: 'selectOption',\n\t    27: 'hideOnEscape',\n\t    38: 'focusPrevious',\n\t    40: 'focusNext'\n\t  },\n\n\t  handleKeydown: function(event) {\n\t    var handlerName = this.inputKeydownMap[event.keyCode];\n\t    if (!handlerName)\n\t      return\n\t    this.setState({usingKeyboard: true});\n\t    return this[handlerName].call(this,event);\n\t  },\n\n\t  handleOptionKeyDown: function(child, event) {\n\t    var handlerName = this.optionKeydownMap[event.keyCode];\n\t    if (!handlerName) {\n\t      // if the user starts typing again while focused on an option, move focus\n\t      // to the inpute, select so it wipes out any existing value\n\t      this.selectInput();\n\t      return;\n\t    }\n\t    event.preventDefault();\n\t    this.setState({usingKeyboard: true});\n\t    this[handlerName].call(this, child);\n\t  },\n\n\t  handleOptionMouseEnter: function(index) {\n\t    if (this.state.usingKeyboard)\n\t      this.setState({usingKeyboard: false});\n\t    else\n\t      this.focusOptionAtIndex(index);\n\t  },\n\n\t  selectOnEnter: function(event) {\n\t    event.preventDefault();\n\t    this.maybeSelectAutocompletedOption()\n\t  },\n\n\t  maybeSelectAutocompletedOption: function() {\n\t    if (!this.state.matchedAutocompleteOption) {\n\t      this.selectText()\n\t    } else {\n\t      this.selectOption(this.state.matchedAutocompleteOption, {focus: false});\n\t    }\n\t  },\n\n\t  selectOption: function(child, options) {\n\t    options = options || {};\n\t    this.setState({\n\t      // value: child.props.value,\n\t      // inputValue: getLabel(child),\n\t      matchedAutocompleteOption: null\n\t    }, function() {\n\t      this.props.onSelect(child.props.value, child);\n\t      this.hideList();\n\t      this.clearSelectedState(); // added\n\t      if (options.focus !== false)\n\t        this.selectInput();\n\t    }.bind(this));\n\t    this.refs.input.getDOMNode().value = '' // added\n\t  },\n\n\t  selectText: function() {\n\t    var value = this.refs.input.getDOMNode().value;\n\t    if(!value) return;\n\t    this.props.onSelect(value);\n\t    this.clearSelectedState();\n\t    this.refs.input.getDOMNode().value = '' // added\n\t  },\n\n\t  focusNext: function(event) {\n\t    if(event.preventDefault) event.preventDefault();\n\t    if (this.state.menu.isEmpty) return;\n\t    var index = this.state.focusedIndex == null ?\n\t      0 : this.state.focusedIndex + 1;\n\t    this.focusOptionAtIndex(index);\n\t  },\n\n\t  removeLastToken: function() {\n\t    if(this.props.onRemoveLast && !this.refs.input.getDOMNode().value) {\n\t      this.props.onRemoveLast()\n\t    }\n\t    return true\n\t  },\n\n\t  focusPrevious: function(event) {\n\t    if(event.preventDefault) event.preventDefault();\n\t    if (this.state.menu.isEmpty) return;\n\t    var last = this.props.children.length - 1;\n\t    var index = this.state.focusedIndex == null ?\n\t      last : this.state.focusedIndex - 1;\n\t    this.focusOptionAtIndex(index);\n\t  },\n\n\t  focusSelectedOption: function() {\n\t    var selectedIndex;\n\t    React.Children.forEach(this.props.children, function(child, index) {\n\t      if (child.props.value === this.state.value)\n\t        selectedIndex = index;\n\t    }.bind(this));\n\t    this.showList();\n\t    this.setState({\n\t      focusedIndex: selectedIndex\n\t    }, this.focusOption);\n\t  },\n\n\t  findInitialInputValue: function() {\n\t    // TODO: might not need this, we should know this in `makeMenu`\n\t    var inputValue;\n\t    React.Children.forEach(this.props.children, function(child) {\n\t      if (child.props.value === this.props.value)\n\t        inputValue = getLabel(child);\n\t    }.bind(this));\n\t    return inputValue;\n\t  },\n\n\t  focusOptionAtIndex: function(index) {\n\t    if (!this.state.isOpen && this.state.value)\n\t      return this.focusSelectedOption();\n\t    this.showList();\n\t    var length = this.props.children.length;\n\t    if (index === -1)\n\t      index = length - 1;\n\t    else if (index === length)\n\t      index = 0;\n\t    this.setState({\n\t      focusedIndex: index\n\t    }, this.focusOption);\n\t  },\n\n\t  focusOption: function() {\n\t    var index = this.state.focusedIndex;\n\t    this.refs.list.getDOMNode().childNodes[index].focus();\n\t  },\n\n\t  render: function() {\n\t    var ariaLabel = this.props['aria-label'] || 'Start typing to search. ' +\n\t      'Press the down arrow to navigate results. If you don\\'t find an ' +\n\t      'acceptable option, you can enter an alternative.'\n\n\t    return div({className: this.getClassName()},\n\t      this.props.value,\n\t      this.state.inputValue,\n\t      input({\n\t        ref: 'input',\n\t        autoComplete: 'off',\n\t        spellCheck: 'false',\n\t        'aria-label': ariaLabel,\n\t        'aria-expanded': this.state.isOpen+'',\n\t        'aria-haspopup': 'true',\n\t        'aria-activedescendant': this.state.menu.activedescendant,\n\t        'aria-autocomplete': 'list',\n\t        'aria-owns': this.state.listId,\n\t        id: this.props.id,\n\t        className: 'ic-tokeninput-input',\n\t        onChange: this.handleInputChange,\n\t        onBlur: this.handleInputBlur,\n\t        onKeyDown: this.handleKeydown,\n\t        onKeyUp: this.handleInputKeyUp,\n\t        role: 'combobox'\n\t      }),\n\t      span({\n\t        'aria-hidden': 'true',\n\t        className: 'ic-tokeninput-button',\n\t        onClick: this.handleButtonClick\n\t      }, '▾'),\n\t      div({\n\t        id: this.state.listId,\n\t        ref: 'list',\n\t        className: 'ic-tokeninput-list',\n\t        role: 'listbox'\n\t      }, this.state.menu.children)\n\t    );\n\t  }\n\t});\n\n\tfunction getLabel(component) {\n\t  return component.props.label || component.props.children;\n\t}\n\n\tfunction matchFragment(userInput, firstChildLabel) {\n\t  userInput = userInput.toLowerCase();\n\t  firstChildLabel = firstChildLabel.toLowerCase();\n\t  if (userInput === '' || userInput === firstChildLabel)\n\t    return false;\n\t  if (firstChildLabel.toLowerCase().indexOf(userInput.toLowerCase()) === -1)\n\t    return false;\n\t  return true;\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar React = __webpack_require__(3);\n\tvar span = React.DOM.span;\n\tvar li = React.createFactory('li');\n\n\tmodule.exports = React.createClass({displayName: \"exports\",\n\t  handleClick: function() {\n\t    this.props.onRemove(this.props.value)\n\t  },\n\n\t  handleKeyDown: function(key) {\n\t    var enterKey = 13;\n\t    if(key.keyCode === enterKey) this.props.onRemove(this.props.value)\n\t  },\n\n\t  render: function() {\n\t    return (\n\t      li({\n\t        className: \"ic-token inline-flex\"\n\t      },\n\t        span({\n\t          role: 'button',\n\t          onClick: this.handleClick,\n\t          onKeyDown: this.handleKeyDown,\n\t          'aria-label': 'Remove \\'' + this.props.name + '\\'',\n\t          className: \"ic-token-delete-button\",\n\t          tabIndex: 0\n\t        }, \"✕\"),\n\t        span({className: \"ic-token-label\"}, this.props.name)\n\t      )\n\t    )\n\t  }\n\t})\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = addClass;\n\n\tfunction addClass(existing, added) {\n\t  if (!existing) return added;\n\t  if (existing.indexOf(added) > -1) return existing;\n\t  return existing + ' ' + added;\n\t}\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-tokeninput.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d565fa7672eea8600b30\n **/","var TokenInput = require('./lib/main')\nTokenInput.Option = require('./lib/option')\n\nmodule.exports = TokenInput\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","var React = require('react');\nvar Combobox = React.createFactory(require('./combobox'));\nvar Token = React.createFactory(require('./token'));\n\nvar ul = React.createFactory('ul');\nvar li = React.createFactory('li');\n\nmodule.exports = React.createClass({\n  propTypes: {\n    onInput: React.PropTypes.func,\n    onSelect: React.PropTypes.func.isRequired,\n    onRemove: React.PropTypes.func.isRequired,\n    selected: React.PropTypes.array.isRequired,\n    menuContent: React.PropTypes.any\n  },\n\n  getInitialState: function() {\n    return {\n      selectedToken: null\n    };\n  },\n\n  handleClick: function() {\n    // TODO: Expand combobox API for focus\n    this.refs['combo-li'].getDOMNode().querySelector('input').focus();\n  },\n\n  handleInput: function(event) {\n    this.props.onInput(event);\n  },\n\n  handleSelect: function(event) {\n    this.props.onSelect(event)\n    this.setState({\n      selectedToken: null\n    })\n  },\n\n  handleRemove: function(value) {\n    this.props.onRemove(value);\n    this.refs['combo-li'].getDOMNode().querySelector('input').focus();\n  },\n\n  handleRemoveLast: function() {\n    this.props.onRemove(this.props.selected[this.props.selected.length - 1]);\n  },\n\n  render: function() {\n    var tokens = this.props.selected.map(function(token) {\n      return (\n        Token({\n          onRemove: this.handleRemove,\n          value: token,\n          name: token.name,\n          key: token.id})\n      )\n    }.bind(this))\n\n    return ul({className: 'ic-tokens flex', onClick: this.handleClick},\n      tokens,\n      li({className: 'inline-flex', ref: 'combo-li'},\n        Combobox({\n          id: this.props.id,\n          ariaLabel: this.props['combobox-aria-label'],\n          onInput: this.handleInput,\n          onSelect: this.handleSelect,\n          onRemoveLast: this.handleRemoveLast,\n          value: this.state.selectedToken\n        },\n          this.props.menuContent\n        )\n      )\n    );\n  }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/main.js\n **/","var React = require('react');\nvar addClass = require('./add-class');\nvar div = React.createFactory('div');\n\nmodule.exports = React.createClass({\n\n  propTypes: {\n\n    /**\n     * The value that will be sent to the `onSelect` handler of the\n     * parent Combobox.\n    */\n    value: React.PropTypes.any.isRequired,\n\n    /**\n     * What value to put into the input element when this option is\n     * selected, defaults to its children coerced to a string.\n    */\n    label: React.PropTypes.string\n  },\n\n  getDefaultProps: function() {\n    return {\n      role: 'option',\n      tabIndex: '-1',\n      className: 'ic-tokeninput-option',\n      isSelected: false\n    };\n  },\n\n  render: function() {\n    var props = this.props;\n    if (props.isSelected) {\n      props.className = addClass(props.className, 'ic-tokeninput-selected');\n      props.ariaSelected = true;\n    }\n    return div(props);\n  }\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/option.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 3\n ** module chunks = 0\n **/","var React = require('react');\nvar guid = 0;\nvar k = function(){};\nvar addClass = require('./add-class');\nvar ComboboxOption = React.createFactory(require('./option'));\n\nvar div = React.createFactory('div');\nvar span = React.createFactory('span');\nvar input = React.createFactory('input');\n\nmodule.exports = React.createClass({\n\n  propTypes: {\n    /**\n     * Called when the combobox receives user input, this is your chance to\n     * filter the data and rerender the options.\n     *\n     * Signature:\n     *\n     * ```js\n     * function(userInput){}\n     * ```\n    */\n    onInput: React.PropTypes.func,\n\n    /**\n     * Called when the combobox receives a selection. You probably want to reset\n     * the options to the full list at this point.\n     *\n     * Signature:\n     *\n     * ```js\n     * function(selectedValue){}\n     * ```\n    */\n    onSelect: React.PropTypes.func\n  },\n\n  getDefaultProps: function() {\n    return {\n      autocomplete: 'both',\n      onInput: k,\n      onSelect: k,\n      value: null\n    };\n  },\n\n  getInitialState: function() {\n    return {\n      value: this.props.value,\n      // the value displayed in the input\n      inputValue: this.findInitialInputValue(),\n      isOpen: false,\n      focusedIndex: null,\n      matchedAutocompleteOption: null,\n      // this prevents crazy jumpiness since we focus options on mouseenter\n      usingKeyboard: false,\n      activedescendant: null,\n      listId: 'ic-tokeninput-list-'+(++guid),\n      menu: {\n        children: [],\n        activedescendant: null,\n        isEmpty: true\n      }\n    };\n  },\n\n  componentWillMount: function() {\n    this.setState({menu: this.makeMenu()});\n  },\n\n  componentWillReceiveProps: function(newProps) {\n    this.setState({menu: this.makeMenu(newProps.children)}, function() {\n      if(newProps.children.length && (this.isOpen || document.activeElement === this.refs.input.getDOMNode())) {\n        this.showList();\n      } else {\n        this.hideList();\n      }\n\n    }.bind(this));\n  },\n\n  /**\n   * We don't create the <ComboboxOption> components, the user supplies them,\n   * so before rendering we attach handlers to facilitate communication from\n   * the ComboboxOption to the Combobox.\n  */\n  makeMenu: function(children) {\n    var activedescendant;\n    var isEmpty = true;\n    children = children || this.props.children;\n\n    // Should this instead use React.addons.cloneWithProps or React.cloneElement?\n    React.Children.forEach(children, function(child, index) {\n      if (child.type !== ComboboxOption.type)\n        // allow random elements to live in this list\n        return;\n      isEmpty = false;\n      // TODO: cloneWithProps and map instead of altering the children in-place\n      var props = child.props;\n      if (this.state.value === props.value) {\n        // need an ID for WAI-ARIA\n        props.id = props.id || 'ic-tokeninput-selected-'+(++guid);\n        props.isSelected = true\n        activedescendant = props.id;\n      }\n      props.onBlur = this.handleOptionBlur;\n      props.onClick = this.selectOption.bind(this, child);\n      props.onFocus = this.handleOptionFocus;\n      props.onKeyDown = this.handleOptionKeyDown.bind(this, child);\n      props.onMouseEnter = this.handleOptionMouseEnter.bind(this, index);\n    }.bind(this));\n\n    return {\n      children: children,\n      activedescendant: activedescendant,\n      isEmpty: isEmpty\n    };\n  },\n\n  getClassName: function() {\n    var className = addClass(this.props.className, 'ic-tokeninput');\n    if (this.state.isOpen)\n      className = addClass(className, 'ic-tokeninput-is-open');\n    return className;\n  },\n\n  /**\n   * When the user begins typing again we need to clear out any state that has\n   * to do with an existing or potential selection.\n  */\n  clearSelectedState: function(cb) {\n    this.setState({\n      focusedIndex: null,\n      inputValue: null,\n      value: null,\n      matchedAutocompleteOption: null,\n      activedescendant: null\n    }, cb);\n  },\n\n  handleInputChange: function(event) {\n    var value = this.refs.input.getDOMNode().value;\n    this.clearSelectedState(function() {\n      this.props.onInput(value);\n    }.bind(this));\n  },\n\n  handleInputBlur: function() {\n    var focusedAnOption = this.state.focusedIndex != null;\n    if (focusedAnOption)\n      return;\n    this.maybeSelectAutocompletedOption();\n    this.hideList();\n  },\n\n  handleOptionBlur: function() {\n    // don't want to hide the list if we focused another option\n    this.blurTimer = setTimeout(this.hideList, 0);\n  },\n\n  handleOptionFocus: function() {\n    // see `handleOptionBlur`\n    clearTimeout(this.blurTimer);\n  },\n\n  handleInputKeyUp: function(event) {\n    if (\n      this.state.menu.isEmpty ||\n      // autocompleting while backspacing feels super weird, so let's not\n      event.keyCode === 8 /*backspace*/ ||\n      !this.props.autocomplete.match(/both|inline/)\n    ) return;\n  },\n\n  handleButtonClick: function() {\n    this.state.isOpen ? this.hideList() : this.showList();\n    this.focusInput();\n  },\n\n  showList: function() {\n    if(!this.state.menu.children.length) {\n      return\n    }\n    this.setState({isOpen: true})\n  },\n\n  hideList: function() {\n    this.setState({isOpen: false});\n  },\n\n  hideOnEscape: function(event) {\n    this.hideList();\n    this.focusInput();\n    event.preventDefault();\n  },\n\n  focusInput: function() {\n    this.refs.input.getDOMNode().focus();\n  },\n\n  selectInput: function() {\n    this.refs.input.getDOMNode().select();\n  },\n\n  inputKeydownMap: {\n    8: 'removeLastToken',\n    13: 'selectOnEnter',\n    27: 'hideOnEscape',\n    38: 'focusPrevious',\n    40: 'focusNext'\n  },\n\n  optionKeydownMap: {\n    13: 'selectOption',\n    27: 'hideOnEscape',\n    38: 'focusPrevious',\n    40: 'focusNext'\n  },\n\n  handleKeydown: function(event) {\n    var handlerName = this.inputKeydownMap[event.keyCode];\n    if (!handlerName)\n      return\n    this.setState({usingKeyboard: true});\n    return this[handlerName].call(this,event);\n  },\n\n  handleOptionKeyDown: function(child, event) {\n    var handlerName = this.optionKeydownMap[event.keyCode];\n    if (!handlerName) {\n      // if the user starts typing again while focused on an option, move focus\n      // to the inpute, select so it wipes out any existing value\n      this.selectInput();\n      return;\n    }\n    event.preventDefault();\n    this.setState({usingKeyboard: true});\n    this[handlerName].call(this, child);\n  },\n\n  handleOptionMouseEnter: function(index) {\n    if (this.state.usingKeyboard)\n      this.setState({usingKeyboard: false});\n    else\n      this.focusOptionAtIndex(index);\n  },\n\n  selectOnEnter: function(event) {\n    event.preventDefault();\n    this.maybeSelectAutocompletedOption()\n  },\n\n  maybeSelectAutocompletedOption: function() {\n    if (!this.state.matchedAutocompleteOption) {\n      this.selectText()\n    } else {\n      this.selectOption(this.state.matchedAutocompleteOption, {focus: false});\n    }\n  },\n\n  selectOption: function(child, options) {\n    options = options || {};\n    this.setState({\n      // value: child.props.value,\n      // inputValue: getLabel(child),\n      matchedAutocompleteOption: null\n    }, function() {\n      this.props.onSelect(child.props.value, child);\n      this.hideList();\n      this.clearSelectedState(); // added\n      if (options.focus !== false)\n        this.selectInput();\n    }.bind(this));\n    this.refs.input.getDOMNode().value = '' // added\n  },\n\n  selectText: function() {\n    var value = this.refs.input.getDOMNode().value;\n    if(!value) return;\n    this.props.onSelect(value);\n    this.clearSelectedState();\n    this.refs.input.getDOMNode().value = '' // added\n  },\n\n  focusNext: function(event) {\n    if(event.preventDefault) event.preventDefault();\n    if (this.state.menu.isEmpty) return;\n    var index = this.state.focusedIndex == null ?\n      0 : this.state.focusedIndex + 1;\n    this.focusOptionAtIndex(index);\n  },\n\n  removeLastToken: function() {\n    if(this.props.onRemoveLast && !this.refs.input.getDOMNode().value) {\n      this.props.onRemoveLast()\n    }\n    return true\n  },\n\n  focusPrevious: function(event) {\n    if(event.preventDefault) event.preventDefault();\n    if (this.state.menu.isEmpty) return;\n    var last = this.props.children.length - 1;\n    var index = this.state.focusedIndex == null ?\n      last : this.state.focusedIndex - 1;\n    this.focusOptionAtIndex(index);\n  },\n\n  focusSelectedOption: function() {\n    var selectedIndex;\n    React.Children.forEach(this.props.children, function(child, index) {\n      if (child.props.value === this.state.value)\n        selectedIndex = index;\n    }.bind(this));\n    this.showList();\n    this.setState({\n      focusedIndex: selectedIndex\n    }, this.focusOption);\n  },\n\n  findInitialInputValue: function() {\n    // TODO: might not need this, we should know this in `makeMenu`\n    var inputValue;\n    React.Children.forEach(this.props.children, function(child) {\n      if (child.props.value === this.props.value)\n        inputValue = getLabel(child);\n    }.bind(this));\n    return inputValue;\n  },\n\n  focusOptionAtIndex: function(index) {\n    if (!this.state.isOpen && this.state.value)\n      return this.focusSelectedOption();\n    this.showList();\n    var length = this.props.children.length;\n    if (index === -1)\n      index = length - 1;\n    else if (index === length)\n      index = 0;\n    this.setState({\n      focusedIndex: index\n    }, this.focusOption);\n  },\n\n  focusOption: function() {\n    var index = this.state.focusedIndex;\n    this.refs.list.getDOMNode().childNodes[index].focus();\n  },\n\n  render: function() {\n    var ariaLabel = this.props['aria-label'] || 'Start typing to search. ' +\n      'Press the down arrow to navigate results. If you don\\'t find an ' +\n      'acceptable option, you can enter an alternative.'\n\n    return div({className: this.getClassName()},\n      this.props.value,\n      this.state.inputValue,\n      input({\n        ref: 'input',\n        autoComplete: 'off',\n        spellCheck: 'false',\n        'aria-label': ariaLabel,\n        'aria-expanded': this.state.isOpen+'',\n        'aria-haspopup': 'true',\n        'aria-activedescendant': this.state.menu.activedescendant,\n        'aria-autocomplete': 'list',\n        'aria-owns': this.state.listId,\n        id: this.props.id,\n        className: 'ic-tokeninput-input',\n        onChange: this.handleInputChange,\n        onBlur: this.handleInputBlur,\n        onKeyDown: this.handleKeydown,\n        onKeyUp: this.handleInputKeyUp,\n        role: 'combobox'\n      }),\n      span({\n        'aria-hidden': 'true',\n        className: 'ic-tokeninput-button',\n        onClick: this.handleButtonClick\n      }, '▾'),\n      div({\n        id: this.state.listId,\n        ref: 'list',\n        className: 'ic-tokeninput-list',\n        role: 'listbox'\n      }, this.state.menu.children)\n    );\n  }\n});\n\nfunction getLabel(component) {\n  return component.props.label || component.props.children;\n}\n\nfunction matchFragment(userInput, firstChildLabel) {\n  userInput = userInput.toLowerCase();\n  firstChildLabel = firstChildLabel.toLowerCase();\n  if (userInput === '' || userInput === firstChildLabel)\n    return false;\n  if (firstChildLabel.toLowerCase().indexOf(userInput.toLowerCase()) === -1)\n    return false;\n  return true;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/combobox.js\n **/","var React = require('react');\nvar span = React.DOM.span;\nvar li = React.createFactory('li');\n\nmodule.exports = React.createClass({\n  handleClick: function() {\n    this.props.onRemove(this.props.value)\n  },\n\n  handleKeyDown: function(key) {\n    var enterKey = 13;\n    if(key.keyCode === enterKey) this.props.onRemove(this.props.value)\n  },\n\n  render: function() {\n    return (\n      li({\n        className: \"ic-token inline-flex\"\n      },\n        span({\n          role: 'button',\n          onClick: this.handleClick,\n          onKeyDown: this.handleKeyDown,\n          'aria-label': 'Remove \\'' + this.props.name + '\\'',\n          className: \"ic-token-delete-button\",\n          tabIndex: 0\n        }, \"✕\"),\n        span({className: \"ic-token-label\"}, this.props.name)\n      )\n    )\n  }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/token.js\n **/","module.exports = addClass;\n\nfunction addClass(existing, added) {\n  if (!existing) return added;\n  if (existing.indexOf(added) > -1) return existing;\n  return existing + ' ' + added;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/add-class.js\n **/"],"sourceRoot":""}