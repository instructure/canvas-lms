#!/usr/bin/env groovy

/*
 * Copyright (C) 2019 - present Instructure, Inc.
 *
 * This file is part of Canvas.
 *
 * Canvas is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License as published by the Free
 * Software Foundation, version 3 of the License.
 *
 * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Affero General Public License along
 * with this program. If not, see <http://www.gnu.org/licenses/>.
 */

library "canvas-builds-library@${env.CANVAS_BUILDS_REFSPEC}"

def cleanupFn() {
  try {
    def htmlFiles

    sh 'docker cp $(docker ps -f "ancestor"="$PATCHSET_TAG" -q):/usr/src/app/tmp/spec_results/. ./spec_results/'

    dir ('spec_results') {
      sh 'mv report.html canvas_i18nliner_results.html'
      htmlFiles = findFiles glob: '*results.html'
    }

    publishHTML target: [
      allowMissing: false,
      alwaysLinkToLastBuild: false,
      keepAll: true,
      reportDir: "spec_results",
      reportFiles: htmlFiles.join(','),
      reportName: 'Test Results'
    ]
  } finally {
    sh 'rm -vrf ./spec_results/'
    libraryScript.execute 'bash/docker-cleanup.sh --allow-failure'
  }
}

pipeline {
  agent none
  options {
    ansiColor('xterm')
    timeout(time: 15)
    timestamps()
  }

  environment {
    DISABLE_SPRING = 'true'
    COMPOSE_FILE = 'docker-compose.new-jenkins.yml:docker-compose.new-jenkins.vendored-gems.yml'

    POSTGRES_PASSWORD = 'sekret'
  }

  stages {
    stage('Environment') {
      steps {
        script {
          protectedNode('canvas-docker', { cleanupFn() }) {
            stage ('Setup') {
              cleanAndSetup()
              timeout(time: 2) {
               def refspecToCheckout = env.GERRIT_PROJECT == "canvas-lms" ? env.JENKINSFILE_REFSPEC : env.CANVAS_LMS_REFSPEC

               checkoutRepo("canvas-lms", refspecToCheckout, 1)

               credentials.withStarlordCredentials { ->
                 sh(script: 'build/new-jenkins/docker-compose-pull.sh', label: 'Pull Images')
               }
                sh 'build/new-jenkins/docker-compose-build-up.sh'
              }
            }

            stage ('Run Vendored Gems specs') {
              timeout(time: 10) {
                sh 'build/new-jenkins/test-gems.sh'
              }
            }

            stage ('Run Engine specs') {
              timeout(time: 10) {
                sh 'build/new-jenkins/test-engines.sh'
              }
            }
          }
        }
      }
    }
  }
}
