{
  "compilerOptions": {
    "allowJs": true, // allows importing of .js files from .ts files
    "esModuleInterop": true, // more accurately transpiles to the ES6 module spec (maybe not needed w/ babel transpilation)
    "isolatedModules": true, // required to adhere to babel's single-file transpilation process
    "lib": ["dom", "ES2020", "ES2020.Intl"], // include types for DOM APIs and standard JS up to ES2020
    "module": "es2020", // support the most modern ES6-style module syntax
    "moduleResolution": "node", // required for non-commonjs imports
    "noEmit": true, // don't generate transpiled JS files, source-maps, or .d.ts files for Canvas source code
    "resolveJsonModule": true, // enables importing json files
    "skipLibCheck": true, // don't do type-checking on dependencies' internal types for improved performance
    "strict": true, // enables a bunch of strict mode family options. See https://www.typescriptlang.org/tsconfig#strict
    "target": "es2020", // support the most modern JS features (let babel handle transpilation)
    "noImplicitAny": false, // temporarily allows un-typed variables (and imports) to be automatically defined as "any"
    "baseUrl": "../",
    "paths": {
      "@canvas/*": ["shared/*"] // lets TS follow "import foo from @canvas/foo"
    }
  },
  "include": ["."]
}
