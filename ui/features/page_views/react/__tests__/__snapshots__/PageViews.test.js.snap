// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<Fragment>
  <div
    style={
      Object {
        "overflowx": "hidden",
        "overflowy": "hidden",
      }
    }
  >
    <Flex
      align="start"
      as="span"
      direction="column"
      display="flex"
      elementRef={[Function]}
      height="570px"
      justifyItems="start"
      key="pageviews_datefilter"
      margin="none none small"
      overflowX="hidden"
      overflowY="hidden"
      withVisualDebug={false}
      wrap="no-wrap"
    >
      <Item
        as="span"
        elementRef={[Function]}
        height="50px"
        overflowX="hidden"
        overflowY="hidden"
        padding="xx-small"
        shouldGrow={false}
        shouldShrink={false}
        textAlign="start"
      >
        <Text
          as="span"
          letterSpacing="normal"
          size="medium"
          weight="bold"
          wrap="normal"
        >
          Filter by date
        </Text>
      </Item>
      <Item
        as="span"
        elementRef={[Function]}
        height="50px"
        overflowX="hidden"
        overflowY="hidden"
        padding="x-small"
        shouldGrow={false}
        shouldShrink={true}
      >
        <Flex
          as="span"
          direction="row"
          display="flex"
          elementRef={[Function]}
          justifyItems="start"
          overflowX="hidden"
          overflowY="hidden"
          withVisualDebug={false}
          wrap="no-wrap"
        >
          <Item
            as="span"
            elementRef={[Function]}
            shouldGrow={false}
            shouldShrink={false}
          >
            <CanvasDateInput
              dataTestid="inputQueryDate"
              formatDate={[Function]}
              onSelectedDateChange={[Function]}
              renderLabel={
                <ScreenReaderContent
                  as="span"
                >
                  Filter by date
                </ScreenReaderContent>
              }
              withRunningValue={true}
            />
          </Item>
          <Item
            as="span"
            elementRef={[Function]}
            padding="x-small"
            shouldGrow={false}
            shouldShrink={false}
          >
            <Link
              color="link"
              data-testid="page_views_csv_link"
              href="/users/718/page_views.csv"
              iconPlacement="start"
              id="page_views_csv_link"
              isWithinText={true}
            >
              Download Page Views CSV
            </Link>
          </Item>
        </Flex>
      </Item>
      <Item
        as="span"
        elementRef={[Function]}
        height="20px"
        shouldGrow={false}
        shouldShrink={false}
      />
      <Item
        as="span"
        data-testid="scrollContainer"
        elementRef={[Function]}
        height="450px"
        id="scrollContainer"
        key="page_views_table"
        overflowY="auto"
        padding="x-small"
        shouldGrow={false}
        shouldShrink={false}
      >
        <InfiniteScroll
          hasMore={false}
          loadMore={[Function]}
          loader={
            <Spinner
              as="div"
              id="paginatedView-loading"
              margin="0 0 0 medium"
              renderTitle="Loading"
              size="small"
              variant="default"
            />
          }
          pageStart={0}
          scrollContainer={null}
          threshold={250}
        >
          <Table
            caption="Page View Results"
            hover={false}
            layout="fixed"
            user-id="718"
          >
            <Head>
              <Row
                key="0"
              >
                <ColHeader
                  id="URL"
                  scope="col"
                  sortDirection="none"
                  textAlign="start"
                >
                  URL
                </ColHeader>
                <ColHeader
                  id="Date"
                  scope="col"
                  sortDirection="none"
                  textAlign="start"
                  width="175px"
                >
                  Date
                </ColHeader>
                <ColHeader
                  id="Paticipated"
                  scope="col"
                  sortDirection="none"
                  textAlign="start"
                  width="115px"
                >
                  Participated
                </ColHeader>
                <ColHeader
                  id="Time"
                  scope="col"
                  sortDirection="none"
                  textAlign="start"
                  width="60px"
                >
                  Time
                </ColHeader>
                <ColHeader
                  id="Agent"
                  scope="col"
                  sortDirection="none"
                  textAlign="start"
                  width="125px"
                >
                  User Agent
                </ColHeader>
              </Row>
            </Head>
            <Body
              id="page_view_results"
            />
          </Table>
        </InfiniteScroll>
      </Item>
    </Flex>
  </div>
</Fragment>
`;
