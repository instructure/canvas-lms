# this config file is useful if you don't want to run vault
# agents with canvas.  Local Development is the most common case
# for this, but a small OSS deployment might have it make sense too.
# Just provide the results data you want the Vault class to "read",
# and it will return it when a call for vault data is issued. Data should be
# shaped like the example below.  Each environment can get a hash,
# there's a key for each read path, and a hash for the returned data
development:
  'sts/testaccount/sts/canvas-shards-lookupper-dev':
    access_key: 'fake-access-key'
    secret_key: 'fake-secret-key'
    security_token: 'fake-security-token'
  # credentials used by smart search and discussion summaries
  'sts/testaccount/sts/bedrock-dev':
    access_key: aws-key-id-goes-here
    secret_key: secret-goes-here
  # credentials used by translations
  'sts/testaccount/sts/sagemaker-dev':
    access_key: aws-key-id-goes-here
    secret_key: secret-goes-here
  'sts/testaccount/sts/canvas-release-notes':
    access_key: 'fake-access-key'
    secret_key: 'fake-secret-key'
    security_token: 'fake-security-token'
  'app-canvas/data/secrets':
    data:
      canvas_security:
        encryption_secret: "astringthatisactually32byteslong"
        signing_secret: "astringthatisactually32byteslong"
      lti_platform_storage:
        signing_secret: "astringthatisactually32byteslong"
#     pandata_creds:
#       canvas_key: 'INTERNAL_TEST'
#       canvas_secret: 'internaltest'
#       canvas_secret_alg: 'HS256'
      learn_platform_creds:
        learn_platform_basic_token: 'internaltest'
#      canvas_cdn_creds:
#        aws_access_key_id: <access_key_id>
#        aws_secret_access_key: <secret_access_key>
#      google_docs_creds:
#        secret_key: so-secret
#      immersive_reader:
#        tenant_id: ""
#        client_id: ""
#        client_secret: ""
#        subdomain: "canvasir"
      # These two keys are real RSA keys that were generate for ease of local development for New Quizzes rich content links
      # They should NEVER be used in production!
      inst_access_signature:
        private_key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjVsYWgwaWliMHB1Z0VlbWhMQm5nMldyRCtDQ3BOdGV0MW5YOHV1ZGRDVkUrNWI1CkZWOU9Sc1REUXdhU1FLM2IrOXdSdC9HTGozaWM4M1M1U2lOa0VpaFV5YzVKMnE2OFAwTDhNYnJZOCtvV2Npbm0KdGtxdCtJMEdxZmxuTnBoMjJsT2JFOEFKbEhhUytyY2RPMWh1aW1zb3JUR3dpbTNnelFnUndSTFRPbzNRLzV0egpmZzhNUG9HUkdZeUxSWjRQbkVoOVhXOVdTK00yeUgySzZYQ2V3RGM2UUZwVW9QT1U5N0hmbytxR1Ntd1NhUFE0ClBlWURGQ2ROSDIzOWkwdFh2SDVNcEZvWGVJTTJ3eGhtTDV4RlczU2VRYitrbXk1T0RNSEdtNVdQeVFtTks2Rm0KL0orK3IzZ05ZZmxMSEo0bEpyM0xxRExsVitzMjZFTDhTbzZ0QlFJREFRQUJBb0lCQUJOT1ZOODhMcjgvWlJlMQo5ZU1rUEtTZEo2Ujg2ZUowc2FibC9hcmVSUFVCYXd4ZGhSRzdQYnhISFZSeFRXYXpzMjZUR1R5Z3NTc0VGZTg0CjBXYlZYc01FU2dRMUEzVEQ2MHl3a2pyc2xKU0IvNVdzcW9aWnkyS05JS0ViU1dRb21XbEhIV0dGd0lhemYveVYKVzU1Y094ODZ6RlFrcFV1b08yRDRNWVJ6N05HQnhoYXhKc21RV0cxWTBSRDVzUTZlM1QvbTdjclJaVzFaNU9SSApZMjU5dDNnZEVrOGo3UDZQemJGcmc4NDdSZVV4NjEzN2RyQ3ZHSnkrYWpHamc3MXRMZTFkdUZiWnVuWkFLMHBxCk9JSFdLT3IyaENXaXBJc1F6M2JRajNHbkVoMXF1YndnK2UvOStac1UrVjJvVnE2cW1nTUVCTUI5ZlJDWjR1NVIKSmEwYW1lMENnWUVBMllvbnpSTDFkZHI1YjF1cEplSjhKbUZoMHpRZkhlMlZsdEJEVVhLK2lrYTQvOUdlSWlDNwpDbjlteWR1RWI1c01ZNjFzYmk1cWkwaEljZDVsb2xIUVRLbkxwRzNlZ2QyWWdQdCtRcHllZE9pS1Budy9QditNCldpWGQ3dGM4TjZ1SXRDVk4xQnVJbDhZQXkrYzllblFKRlArTmdOaCtCbndyaUp5aUJGNnFNTk1DZ1lFQTRYa2cKRUczeldlemJ5Vll5bTNyaTZHbUJFZWp3NWEwNEV3Vjgwc2E2dlVVU3JJMXQwY1hhWVdoZGZZZ0gyd3RWcjFTdApUVTMrcmplMFc2aTBoQkxZdlo5aHRpSTMzNUozbDRHaWgwZHNST0tpM3kxN0pNTmVDaGMrWFhvTmdCcHJ6ZjZ3CkVWTElWN3JCZWRqWURMVVh3Y1Q2dWVWZUdsWGRWNkhBYTg5bXc4Y0NnWUJ4M1FWdUtyRStDZXFyWmQvSVM1N04KL0FUWEpwM3U3VTl5Qy9wZ1pGM2xSSlZLbVc1YTBLVDJIcTh2a3UzaitOVG9TM3JJeFJUUmFIazYyTHg3MUxUaAptN0pTazR0MmtBVmw1YjAxb29LeUVKRmptV2NGVTM4a0pGUGcwdG5iRGJiVkMvMkx1d21vMzJQRlZuandZbEhxCm9zUnZIMkgvaFBqSVhhdlQrN1M3THdLQmdRRFpwWEI4SzRhQ3dZOFBkTE41UGxBV2hQRmdkbmxEVzhnTEpIcnYKZzRIeS9lQWV6STY3dGI4dDArNmJKRnBnNlRvVyt5Z212U2tneHdqRWliOW0xa0orR0lIYnJJQSt3a1hLN0FvVgpoNjVOZUhBNytzMHFHYVNISFJUSWF1N3BQNWZjeXdMdVZmaXFKczVvYmhkdmZNZW45aHNJb3c0SlllVTltQmdFCmVibjdOUUtCZ0VLTUdpOC95TFlyRmxBazI2cW1QZHdFZUZjM1RzUnpJelROY2lURWJ3TERBbFMzZDNoVnR0bE0KOXI4NmNmanYzUHpCUmlMUnVZcXp3Tm44eGd0bTFmVVA4SWMrWFp6UkI2aFR6MUNsSThoZTE1SWdlMWJlRFF3WAp4WHV1SnBQR2hoN2M1UmZEY0k1a3J1QkxKUjNtOFhESmdxeXF2QzFxcGx3WXZQMCtwWnh2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        encryption_public_key: LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJDZ0tDQVFFQWs2VlhKbjVBNUZoM0QyNytDVW1GaXJFNjNsczFQTHBjLzd2RCtwWFNlRDZ1T09hZ09ZOXgKdEZReENXOC9zTjd5bHA1MWVsZG1lSllLWGwwUFNCTXFJRzd0YmVSdU56ejg5ZkU5aEU3YlFkS24wM3RxUHpQeApYSVpRRDZ3RXEybWxBVnNEZVlRenBEWUxyUFdMTExRRCt2NlJ6ZS9HWC9HajBMdWpMbHMrdFhKUUQyd1hpZWRwCkJTZk5LTGlKK1duUTYzRGVPQ1BWbk16ME15Z1p5L3NhSllVcTR4elhvaXFrM25nZ0ZnbmlMWG5yUFlLNFArOFAKZ1hONUhkdW9YbzJCN2N2SnZxT3hLMC9iTytCSWhQSThnZ0ozM0VQVG5sSDU2d29tOU9kbTNOQVUwNU1TQUQ4MAp6RTdXMVNmODhsVjBGWWc2bk84SlBGWnBqODFob2RLWmp3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K
        service_keys:
          new-quizzes/main:
            issuer: "quiz-api.instructure.com"
            secret: astringthatisactually32byteslong
            key_type: oct
          new-quizzes/canvas_file_authorization:
            issuer: "quiz-api.instructure.com"
            secret: 6e4e7300bc30589203e95559e85bb823bfe71958edd7dc7dc28f0b78c0ce4eb4
            key_type: oct
      inst_fs:
        app_host: "http://api.inst-fs.docker"
        # this is just "super-sekret-value", base64-encoded:
        secret: "c3VwZXItc2VrcmV0LXZhbHVlCg=="
#      linked_in_creds:
#        api_key: <api_key>
#        secret_key: <secret_key>
#      microsoft_sync:
#        client_id: some_client_id
#        client_secret: some_client_secret
#      notification_service_creds:
#        access_key_id: <access_key_id>
#        secret_access_key: <secret_access_key>
#      sentry_dsn: garbage-dsn-here
#      sns_creds:
#        access_key_id: <access_key_id>
#        secret_access_key: <secret_access_key>
#      twilio_creds:
#        account_sid: <sid>
#        auth_token: <token>
#      twitter_creds:
#        api_key: <apikey>
#        secret_key: <secretkey>
test:
  'sts/testaccount/sts/canvas-shards-lookupper-test':
    access_key: 'fake-access-key'
    secret_key: 'fake-secret-key'
    security_token: 'fake-security-token'

production:
  "app-canvas/data/secrets":
    data:
      canvas_security:
        encryption_secret: "astringthatisactually32byteslong"
        signing_secret: "astringthatisactually32byteslong"