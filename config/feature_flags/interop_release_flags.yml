---
developer_key_support_includes:
  state: hidden
  display_name: Developer Key Include Parameter Support
  description: |-
    Provides a flag on the Developer Key to support Include Parameters on API requests
  applies_to: SiteAdmin
disable_graphql_authentication:
  state: hidden
  display_name: Disable authentication for GraphQL
  description: |-
    If enabled, GraphQL queries will not require
    users to be signed in or use an access token.
  applies_to: SiteAdmin
microsoft_group_enrollments_syncing:
  state: hidden
  display_name: Microsoft Group enrollment syncing
  description: |-
    If enabled, syncing course enrollments to Microsoft Groups will be
    available. Account admins may enable this in account settings.
  applies_to: RootAccount
lti_platform_storage:
  state: hidden
  display_name: LTI Platform Storage
  description: |-
    Controls the final changes needed to fully conform to the LTI Platform Storage
    spec, including receiving messages addressed to the correct OIDC Auth
    URI origin, and the postMessage forwarding proxy frame.
  applies_to: SiteAdmin
lti_multiple_assignment_deep_linking:
  state: hidden
  display_name: LTI Multiple Assignment Deep Linking
  description: |-
    If enabled, allows multiple deep link support for assignments and modules.
  applies_to: RootAccount
  environments:
    development:
      state: allowed_on
    ci:
      state: allowed_on
lti_deep_linking_module_index_menu_modal:
  state: hidden
  display_name: LTI Deep Linking for Module Index Menu
  description: |-
    If enabled, allows deep linking from the module index via a modal.
  applies_to: RootAccount
lti_deep_linking_line_items:
  state: hidden
  display_name: LTI Deep Linking Line Items
  description: |-
    If enabled, creates assignments from LineItems in deep link messages.
  applies_to: RootAccount
lti_assignment_page_line_items:
  state: hidden
  display_name: LTI Deep Linking Line Items on Assignment create/edit page
  description: |-
    If enabled, prefills the assignment form with values from deep link messages on the assignment create/edit page.
  applies_to: RootAccount
api_auth_error_updates:
  state: hidden
  display_name: Updates to JSON API auth error HTTP code and JSON status field
  description: |-
    If enabled, an "unauthorized" response from the JSON API will return a 403
    (Forbidden) instead of a 401 code, to be more in line with HTTP standards.
    Also, when the API returns a unauthenticated or unauthorized JSON error,
    the "status" field will not be localized; it will always be given in
    English.
  applies_to: SiteAdmin
variable_substitution_numeric_to_string:
  state: hidden
  display_name: Returns string values instead of numeric values in variable substitutions
  description: |-
    If enabled, variable substitutions will return string values instead of numeric values
  applies_to: RootAccount
ags_scores_multiple_files:
  state: hidden
  display_name: Allow multiple file AGS submissions to count as only one submission
  description: |-
    This feature makes it so that when multiple files are submitted together by
    a third party tool via the Assignments and Grade Service API they will be
    grouped as one submission, rather than creating multiple separate submissions.
  applies_to: RootAccount
  environments:
    development:
      state: on
lti_tools_from_federated_parents:
  state: hidden
  display_name: Show LTI tools from federated parent accounts
  description: |-
    If enabled, LTI tools installed in federated parent accounts will be
    available / visible in child accounts.
  applies_to: SiteAdmin
ags_improved_course_concluded_response_codes:
  state: hidden
  display_name: Better LTI AGS Response Codes for Concluded Courses
  description: |-
    If enabled, the AGS API will return a more helpful response code whenever an LTI
    tool attempts to access or modify data in a course that has already concluded.
    Rather than returning a generic 404 Not Found, the API will instead return a 422
    along with a helpful message indicating that the tool cannot access concluded
    courses.
  applies_to: RootAccount
deep_linking_use_window_parent:
  state: hidden
  display_name: Use window.parent in Deep Linking Response
  description: |-
    If enabled, the deep linking response JS will send postMessages
    to window.parent instead of window.top. This enables the deep linking
    response to correctly send content items to New Quizzes, when a tool is
    launched from NQ.
  applies_to: SiteAdmin
  environments:
    development:
      state: allowed_on
    ci:
      state: on
consistent_ags_ids_based_on_account_principal_domain:
  state: hidden
  display_name: Consistent LTI AGS IDs based on Account's principal domain
  description: |-
    If enabled, AGS will use the Account's principal domain for Line Items IDs
    throughout the AGS API and LTI Launches, regardless of which domain the LTI
    launch happens on or the API is accessed through. For schools with multiple
    domains, this ensures consistency in Line Item IDs.
  applies_to: RootAccount
dev_key_oidc_alert:
  state: hidden
  display_name: OIDC Auth endpoint changes - show alert for upcoming changes
  description: |-
    If enabled, the user will see a warning Alert box near the top of the
    Developer Keys page informing them of upcoming or completed OIDC Auth endpoint changes.
  applies_to: SiteAdmin
  environments:
    development:
      state: allowed_on
    ci:
      state: allowed_on
lti_dynamic_registration:
  state: hidden
  display_name: LTI Dynamic Registration
  description: Enables administrators to register LTI tools with Dynamic Registration
  applies_to: RootAccount
dynamic_lti_environment_overrides:
  state: hidden
  display_name: Dynamic LTI 1.1 Environment-specific override URLs
  description: |-
    Replaces the existing 'update_external_tools' beta refresh task (that overwrites
    all URLs in a tool with beta-specific launch URLs) with a dynamic lookup of the
    correct launch URL.
  applies_to: SiteAdmin
  environments:
    development:
      state: allowed_on
    ci:
      state: allowed_on
disable_oembed_retrieve:
  state: hidden
  applies_to: RootAccount
  display_name: Disable oembed_retrieve endpoint
  description: |-
    If enabled, the deprecated oembed_retrieve endpoint will be unavailable.
    This is to ease transitioning any potential users off this endpoint before
    removing it altogether.
include_oauth_consumer_key_in_lti_launch:
  state: hidden
  applies_to: SiteAdmin
  display_name: Enable Sending OAuth Consumer Key
  environments:
    development:
      state: allowed_on
    ci:
      state: allowed_on
  description: |-
    When enabled, LTI 1.3 launches that would be associated with LTI 1.1 tool
    if the LTI 1.3 tool wasn't present will include the oauth_consumer_key and
    oauth_consumer_key_sign properties as part of the LTI 1.1 claims section.
resource_link_uuid_in_custom_substitution:
  state: hidden
  display_name: Use a Resource link's resource_link_uuid in the $ResourceLink.id substitution parameter
  description: |-
    Changes the $ResourceLink.id substitution parameter's behavior
    to include the resource_link_uuid, instead of the resource_id for the line item
  applies_to: RootAccount
tune_lti_context_id_history_query:
  state: hidden
  applies_to: RootAccount
  display_name: Use alternate settings for LTI Context.id.history query
  description: |-
    In some accounts with a large number of content migrations, the query
    that populates the Context.id.history LTI variable expansion may
    time out regardless of the length of the history for that context.
    Enabling this will run the query with different settings that may
    improve performance. Caution: for some accounts where this query
    doesn't already time out, enabling this may cause the query to take
    much longer and even time out.
lti_overwrite_user_url_input_select_content_dialog:
  state: on
  applies_to: RootAccount
  display_name: Overwrite user LTI URL input on select content dialog
  description: |-
    If enabled, the user's LTI URL input on the select content dialog will be overwritten
    if the tool responds with a valid LTI URL.
lti_find_external_tool_prefer_original_client_id:
  state: hidden
  applies_to: RootAccount
  display_name: Prefer LTI tools with a matching client ID when finding an external tool
  description: |-
    When possible, the LTI tool finding logic will prefer tools installed from the same
    developer key as the original tool. This prevents the edge case where multiple developer
    keys share the same domain, and a tool from the wrong developer key would be matched first.
lti_rce_postmessage_support:
  state: hidden
  applies_to: SiteAdmin
  display_name: Support all LTI postMessages from within active RCE
  description: |-
    Respond to all LTI postMessages sent from tools launched within iframes in an active RCE
    window. Supports standard postMessages sent to window.parent and Platform Storage
    messages sent to the sibling post_message_forwarding frame.
  environments:
    development:
      state: allowed_on
    ci:
      state: allowed_on
lti_resource_link_id_speedgrader_launches_reference_assignment:
  state: hidden
  applies_to: RootAccount
  display_name: Make SpeedGrader LTI submission launches use assignment (not tool) resource_link_id
  description: |-
    When enabled, LTI 1.1 SpeedGrader launches will set the resource_link_id and
    resource_link_title to the assignment opaque identifier and assignment
    title. With the feature flag off, in SpeedGrader launches, resource_link_id
    and resource_link_title reference the tool (not the assignment) for
    non-NewQuizzes LTI 1.1 tools.
lti_unique_tool_form_ids:
  state: hidden
  applies_to: RootAccount
  display_name: Use a unique HTML ID for each tool launch form
  description: |-
    When enabled, the hidden HTML forms that are used to trigger an LTI launch
    will each have a random number appended to their id. When disabled, each
    one has the same id of tool_form.
