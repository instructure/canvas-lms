<!DOCTYPE html>
<html>
<head>
  <meta http-equiv=Content-type content="text/html; charset=utf-8">
  <title>Tests</title>
  <link rel="stylesheet" href="support/qunit/qunit.css" type="text/css">
  <link rel="stylesheet" href="../../public/stylesheets/compiled/g_base.css" type="text/css">
  <style>
  body {
    font-family: 'Helvetica', 'Verdana';
  }
  code {
    font-size: 120%;
    background-color: rgba(255, 255, 255, 0.75);
  }
  #fixture {
    background: yellow;
    padding: 10px;
    margin: 10px 0;
    border: solid 1px #ccc;
    -webkit-border-radius: 1em;
    -moz-border-radius: 1em;
    -ms-border-radius: 1em;
    border-radius: 1em;
  }
  </style>
</head>
<body>
  <h1 id="qunit-header">QUnit Test Suite</h1>
  <h2 id="qunit-banner"></h2>
  <div id="qunit-testrunner-toolbar"></div>
  <h2 id="qunit-userAgent"></h2>
  <ol id="qunit-tests"></ol>

  <div id="fixtures"></div>

  <script src="support/qunit/qunit.js"></script>
  <script src="support/sinon/sinon-1.5.2.js"></script>
  <script src="support/sinon/sinon-qunit-1.0.0.js"></script>
  <script>
    if (location.hash === '#testem') document.write('<script src="/testem.js"></'+'script>')
  </script>
  <script>
    var require = {
      urlArgs: "bust=" +  (new Date()).getTime(),

      baseUrl: '../../public/javascripts',

      paths: <%= paths %>,

      // non-amd shims
      use: <%= shims %>,

      packages: [
        {
          name: 'jqueryui',
          location: 'vendor/jqueryui'
        },
        {
          name: 'helpers',
          location: '../../spec/javascripts/helpers',
          main: 'helpers',
          lib: './'
        },
        {
          name: 'support',
          location: '../../spec/javascripts/support',
          main: 'support',
          lib: './'
        },
        {
          name: 'spec',
          location: '../../spec'
        },
      ]
    };
  </script>
  <script src="../../public/javascripts/vendor/require.js"></script>
  <script>
    // keep JSON.stingify from puking on dom nodes in testem
    (function() {
      var old = QUnit.log;
      var toString = Object.prototype.toString;
      QUnit.log = function(result) {
        if (result.actual instanceof HTMLElement) {
          result.actual = result.actual.toString();
          result.expected = result.expected.toString();
        }
        if (toString.call(result.actual) == '[object Array]') {
          for (var i = 0; i < result.actual.length; i++) {
            if (result.actual[i] instanceof HTMLElement) {
              result.actual[i] = result.actual[i].toString();
              result.expected[i] = result.expected[i].toString();
            }
          }
        }
        return old.call(this, result);
      };
    })();

    // don't run specs until they are all loaded
    stop();
    require(<%= Dir["spec/javascripts/#{matcher}"].map{ |file| file.sub(/\.js$/, '') }.inspect %>, function() {
      // run specs once they've all loaded
      start();
    });
  </script>

</body>
</html>

