worker_processes auto;
pid /run/nginx.pid;
daemon off;
user docker;

# Add files to white list env variables
include /usr/src/nginx/main.d/*.conf;

# Ubuntu 18 requires this for nginx+passenger to work.
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    # map $http_origin $cors {
    #     default "NG";
    #     "http://canvas-local.com" "OK";
    #     "http://canvas-lms-web-1" "OK";
    # }   
    access_log /var/log/nginx/access.log;
    
    error_log /var/log/nginx/error.log;

    passenger_default_user docker;
    passenger_user docker;

    passenger_disable_log_prefix on;
    passenger_friendly_error_pages off;
    passenger_show_version_in_header off;

    passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
    passenger_ruby /usr/bin/ruby;

    passenger_app_env production;
    passenger_max_pool_size 6;
    passenger_max_request_queue_size 100;
    passenger_min_instances 1;
    passenger_start_timeout 90;
    passenger_max_requests 0;

    passenger_pre_start http://app.invalid/;



    more_clear_headers 'X-Powered-By';
    passenger_set_header X-Request-Id $request_id;
    server_tokens off;
    client_body_timeout    65;
    client_header_timeout  65;
    client_max_body_size 10g;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Add files here to add additional nginx options
    include      /usr/src/nginx/conf.d/*.conf;

    server {
      listen 80;
      server_name _;
      # HTTPリクエストをHTTPSにリダイレクト
      return 301 https://$host$request_uri;
    }


    server {
            listen       81 default_server;
            server_name  redirect;
            access_log   off;
            if ($host = $remote_addr) {
                return   301 https://app.invalid$request_uri;
            }
            return       301 https://$host$request_uri;
    }

    server {
      listen 443 ssl;
      server_name stg-canvas-rce-api.zuudev.com;

      ssl_certificate /usr/src/app/ssl/rce-api/fullchain.pem;
      ssl_certificate_key /usr/src/app/ssl/rce-api/privkey.pem;

      ssl_protocols TLSv1.2 TLSv1.3;
      ssl_ciphers HIGH:!aNULL:!MD5;
      ssl_prefer_server_ciphers on;

      location /api/ {
         proxy_pass http://canvas-lms-canvasrceapi-1:80/api/;
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto https;        
      }
    }

    server {

        listen 443 ssl;
        server_name stg-canvas.zuudev.com;
        root /usr/src/app/public;

        ssl_certificate /usr/src/app/ssl/fullchain.pem;
        ssl_certificate_key /usr/src/app/ssl/privkey.pem;

        # SSL設定の追加（必要に応じて調整）
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;   

        location / {
            

            passenger_enabled on;

            # Occasionally you may need to add some additional option to your location block, you can add files here to do so.
            include      /usr/src/nginx/location.d/*.conf;
        }

        

        # Custom location blocks can be added to files here.
        include /usr/src/nginx/server.d/*.conf;

        location ~ /\.git {
            deny all;
        }
    }
}