// Based on stock bootstrap 2.2 styles but adapted to work on a jQueryUI tooltip
//
// Popovers
// --------------------------------------------------

// Greater specificity on selection to help override default tooltip styles.
.popover.ui-widget.ui-tooltip,
.popover {
  position: absolute;
  // top: 0;
  // left: 0;
//  z-index: $zindexPopover;
//  display: none;
//  width: 236px;
  padding: 1px;
  background-color: $popoverBackground;
  -webkit-background-clip: padding-box;
     -moz-background-clip: padding;
          background-clip: padding-box;
  border: 1px solid #ccc;
  border: 1px solid rgba(0,0,0,.2);
  @include border-radius($borderRadiusLarge);
  @include box-shadow(0 5px 10px rgba(0,0,0,.2));

  //attributes not part of bootstrap stylesheet that were added by us
  min-width: 280px;
  @include opacity(1);
  color: $grayDark; // override .ui-tooltip's white text color
  text-align: left; // override .ui-tooltip's text-align:center
  min-height: 90px; // keep arrow/carat from mixing with title
  font-size: $baseFontSize;
}

.popover-title {
  margin: 0; // reset heading margin
  padding: 8px 14px;
  font-size: 14px;
  font-weight: normal;
  line-height: 18px;
  background-color: $popoverTitleBackground;
  border-bottom: 1px solid darken($popoverTitleBackground, 5%);
  @include border-radius(5px 5px 0 0);
}

.popover-content {
  padding: 9px 14px;
  p, ul, ol {
    margin-bottom: 0;
  }
}


$popoverArrowDistanceFromCorner: $popoverArrowOuterWidth;
.popover {
  &:before, &:after {
    border-color: transparent transparent $popoverArrowOuterColor transparent;
    position: absolute;
    border-style:solid;
    border-width: $popoverArrowOuterWidth;
    width:0;
    height:0;
    content: "";
    top: -$popoverArrowOuterWidth * 2;
    left: $popoverArrowDistanceFromCorner;
  }
  &:after {
    border-bottom-color: $popoverTitleBackground;
    border-width: $popoverArrowWidth;
    top: -$popoverArrowWidth * 2;
    left: $popoverArrowDistanceFromCorner + 1;
  }
  &.right:before {
    left: auto;
    right: $popoverArrowDistanceFromCorner;
  }
  &.right:after {
    left: auto;
    right: $popoverArrowDistanceFromCorner + 1;
  }
  &.bottom:before {
    border-color: $popoverArrowOuterColor transparent transparent transparent;
    top: auto;
    bottom: -$popoverArrowOuterWidth * 2;
  }
  &.bottom:after {
    border-color: $popoverArrowColor transparent transparent transparent;
    top: auto;
    bottom: -$popoverArrowWidth * 2;
  }
  &.center:before {
    left: 50%;
    margin-left: -$popoverArrowOuterWidth;
    right: auto;
  }
  &.center:after {
    left: 50%;
    margin-left: -$popoverArrowWidth;
    right: auto;
  }
  &.middle:before {
    top: 50%;
    margin-top: -$popoverArrowOuterWidth;
    bottom: auto;
  }
  &.middle:after {
    top: 50%;
    margin-top: -$popoverArrowWidth;
    bottom: auto;
  }
  &.horizontal:before {
    top: 50%;
    margin-top: -$popoverArrowOuterWidth;
    bottom: auto;
    left: -$popoverArrowOuterWidth * 2;
    right: auto;
    border-color: transparent $popoverArrowOuterColor transparent transparent;
  }
  &.horizontal:after {
    top: 50%;
    margin-top: -$popoverArrowWidth;
    bottom: auto;
    left: -$popoverArrowWidth * 2;
    right: auto;
    border-color: transparent $popoverArrowColor transparent transparent;
  }
  &.right.horizontal:before {
    left: auto;
    right: -$popoverArrowOuterWidth * 2;
    border-color: transparent transparent transparent $popoverArrowOuterColor;
  }
  &.right.horizontal:after {
    left: auto;
    right: -$popoverArrowWidth * 2;
    border-color: transparent transparent transparent $popoverArrowColor;
  }
  &.bottom.horizontal:before {
    top: auto;
    bottom: $popoverArrowDistanceFromCorner;
  }
  &.bottom.horizontal:after {
    top: auto;
    bottom: $popoverArrowDistanceFromCorner + 1;
  }
  &.top.horizontal:before {
    top: $popoverArrowDistanceFromCorner;
  }
}
