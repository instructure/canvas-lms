/// TOC
//============================================================================================
//
// - Canvas Brand Variants
// - Custom Branding
// - Canvas LMS Color Sheet
// - Canvas Theme Color Variables
//
//============================================================================================

//======================
// Canvas Brand Variants
//======================
// This imports the variables needed to support new styles {$use_new_styles}
// accessibility ($use_high_contrast)
// You can also use the sass function that helps ensure color contrast ratio.
// Look in /sass-functions/ for more information on how that is used
@import "variant_variables";

//================
// Custom Branding
//================

// First, pull in the account's custom BrandConfig variables, if there is one.
// run `rake brand_configs:write && ./node_modules/.bin/brandable_css`
// Which adds that folder to the top of the sass 'includePaths', so it will
// get picked up here.
// But if not (for the css used when there is no custom BrandConfig),
// this just pulls in 'app/stylesheets/_brand_variables.scss'
// which is a blank file and does nothing.
@if $use_new_styles and not $use_high_contrast {
  @import "brand_variables";
}

//=======================
// Canvas LMS Color Sheet
//=======================
// Our color variables in Canvas are simple and easy to integrate
// We use a two-tiered variable process with Canvas color variables.
// When you need to use a color, please create a functional variable name
// and use the color variable name of your choosing. See examples below.

// These "@if $use_high_contrast ..." conditions need to be run before we load
// the autogenerated brandable variables because we are setting up the correct
// "default value" for it to use.
@if $use_high_contrast { $ic-brand-primary: #0073ac; }

$ic-color-success:                  #008a14; // green
@if $use_high_contrast { $ic-color-success: #007a12; }

$ic-color-neutral:                  hsl(0,0,90%);

$ic-color-action:                   #ee0097; // magenta
@if $use_high_contrast { $ic-color-action: #d00084; }

$ic-color-danger:                   #ad393a; // red
@if $use_high_contrast { $ic-color-danger: #a03536; }

$ic-color-alert:                    #bc8006; // gold
@if $use_high_contrast { $ic-color-alert: #946405; }

$ic-color-light:                    #fff; // white

$ic-color-dark:                     #333;

@if $use_high_contrast {
$ic-link-color:             darken($ic-brand-primary, 2%);
}

// Then, pull in the defaults for the brandable varables, which are auto-generated
// from app/stylesheets/brandable_variables.json (so if you are looking to set the
// default for any of the $ic-brand-* variables, go there). This will set defaults
// for any brand variables that weren't set in the theme editor.
@import "brandable_variables_defaults_autogenerated";

//====================================
// Bootstrap Color Variable Overwrites
//====================================
// These overwrite the variables used by bootstrap using our
// custom colors above

$gray-darker:            lighten(#000, 13.5%); // #222
$gray-dark:              lighten(#000, 20%);   // #333
$gray:                   lighten(#000, 33.5%); // #555
$gray-light:             lighten(#000, 60%);   // #999
$gray-lighter:           lighten(#000, 93.5%); // #eee

//==================
// Layout Variables
//==================
$right_side_width:          286px;
$right_side_margin:         13px;
$left_side_width:           175px;
$min_main_width:            510px;
$max_main_width:            1100px;
$ic-sp:                     12px;
$ic-border-radius:          $ic-sp/2;
$spacing-width:             20px; // TODO - would be nice to phase this one out for $ic-sp
$borderRadius:              4px;
$contentBoxPadding:         8px;

//============================
// Typography Variables
//============================

// Placeholder for old bootstrap variable; deprecated, but still in use some places
// Once all of those have been adjusted to use the new variable we can get rid of this
$ic-line-height: 1.5;
@if not $use_new_styles { $ic-line-height: 20px; }

$ic-font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
$ic-font-weight: 500; // instead of "bold"

$ic-font-size: 14px;

$ic-font-size--xlarge:   28px;
$ic-font-size--large:    23px;
$ic-font-size--medium:   16px;
$ic-font-size--small:    14px;
$ic-font-size--xsmall:   12px;

/* Legacy variables. Discontinue to use these: */
$h1-font-size:  23px;
$h2-font-size:  14px;
$h3-font-size:  19px;

//============================
// Layout Functional Variables
//============================
$ic-body-background-color:      lighten($ic-color-neutral, 4);
$ic-content-background-color:   $ic-color-light;
$ic-content-padding:            15px;
$ic-header-background:          #34444f;
$ic-header-primary-width:       84px;
$ic-header-primary-expanded-width: $ic-sp*15;

//============================
// List Functional Variables
//============================
$ic-list-item-background--hover:      #eef7ff;
$ic-list-item-background--selected:   #d9edf9;

//================================
// Global light background colors
//================================
// These background color variables can be used on hover states or focus states
// and meet our contrast needs when used with our main color variables

$ic-bg-light-neutral:     lighten($ic-color-neutral, 6%);
$ic-bg-light-primary:     safe_background_color($ic-brand-primary);
$ic-bg-light-success:     lighten($ic-color-success, 67%);
$ic-bg-light-alert:       lighten($ic-color-alert, 57%);
@if $use_high_contrast {
  $ic-bg-light-alert:     lighten($ic-color-alert, 66%);
}
$ic-bg-light-danger:      lighten($ic-color-danger, 48%);

//============================
// List Functional Variables
//============================
$ic-list-item-background--hover:      $ic-bg-light-primary;
$ic-list-item-background--selected:   $ic-bg-light-primary;

//=====================
// Global border colors
//=====================

$ic-border-color:         $ic-color-neutral;
// If it's a light border, it should be this color.
$ic-border-light:         darken($ic-color-neutral, 6);
// If it's a dark border, it should be this color.
$ic-border-dark:          darken($ic-color-neutral, 20);

//=============================
// Link-color-related variables
//=============================

$ic-link-color-hover:       darken($ic-link-color, 10%);

$ic-icon-link-color-hover: lighten($ic-color-dark, 15%);
@if $use_high_contrast {
$ic-icon-link-color-hover: $ic-color-dark;
}

$ic-icon-link-color:       lighten($ic-color-dark, 30%);
@if $use_high_contrast {
$ic-icon-link-color:       lighten($ic-color-dark, 12%);
}

// linkColor is a deprecated Bootstrap 2 variable. Please use $ic-link-color!
$linkColor:                 $ic-link-color; // deprecated - do not use
$linkColorHover:            $ic-link-color-hover; // deprecated - do not use

//=====================
// Text-color variables
//=====================
$ic-font-color-light:     $ic-color-light;
$ic-font-color-dark:      $ic-color-dark;
$ic-font-color--subdued:  lighten($ic-color-dark, 21);
$ic-hint-text:            lighten($ic-color-dark, 40);

// textColor is a deprecated Bootstrap 2 variable. Please use $ic-font-color-dark!
$textColor:               $ic-font-color-dark; // deprecated - do not use

//=====================
// Course Nav Variables
//=====================
// These variables control the active and hover
// states we have on the global left-hand sidenav in Canvas
$ic-course-sidenav_list-item--bg-color:               $ic-color-light;
@if $use_high_contrast {
$ic-course-sidenav_list-item--bg-color:               $ic-color-dark;
}
$ic-course-sidenav_list-item--active-font-color:      $ic-brand-primary;
@if $use_high_contrast {
$ic-course-sidenav_list-item--active-font-color:      $ic-color-light;
}
$ic-course-sidenav_list-item--inactive-font-color:    darken($ic-color-neutral, 12);

//===============
// Icon Variables
//===============
//To be used for any disabled icon states
$ic-color-icon-disabled:        darken($ic-color-neutral, 40);
@if $use_high_contrast {
$ic-color-icon-disabled:        darken($ic-color-neutral, 60);
}
$ic-dim-helper-text:            darken($ic-color-neutral, 45);
@if $use_high_contrast {
$ic-dim-helper-text:            darken($ic-color-neutral, 55);
}

// special handling for button--primary coloring
$button--primary-text: $ic-brand-button--primary-text;
$button--primary-bgd: $ic-brand-button--primary-bgd;
@if $use_high_contrast {
  $button--primary-bgd: $ic-brand-primary;
  $button--primary-text: $ic-color-light;
}

// We don't use any of the Bootstrap glyph icons, But bootstrap's scss expects this variable to be defined.
$iconSpritePath:  "canvas_does_not_use_boostraps_default_sprit_based_icons_so_this_is_meaningless" !default;
$iconWhiteSpritePath: $iconSpritePath !default;

//==========================================================
// Legacy Vendor Variables (please do not touch these files)
//==========================================================
// We will be phasing these out
@import 'vendor/bootstrap/variables';
@import 'vendor/jqueryui/variables';

//==============================
// Legacy Global Color Variables - DO NOT USE
//==============================
// These variables we have reworked to use our canvas color variables for the
// new UI, however they will need to be evaluated on a case-by-case basis of
// their use in Canvas in order to properly phase them out
// Nothing changes in the legacy UI.

@if $use_new_styles {
  $lightBackground:               lighten($ic-color-neutral, 8);
  $wellBackground:                $ic-color-light;
  $altBG:                         $ic-bg-light-neutral;
  $borderColor:                   $ic-border-light;
  $activeBG:                      $ic-bg-light-primary;
}
@else {
  $lightBackground:               rgb(248, 250, 251);
  $wellBackground:                #e8ecef;
  $altBG:                         #dfe9f0;
  $borderColor:                   #a8adb3;
  $activeBG:                      #d6ecfc;
}

//=====================
// Transition Variables
//=====================
// This is a pleasing transition that can be used when you need
// a transition timing function
$ic-transition: cubic-bezier(0,1,0.5,1);

//=======================
// Form-related variables
//=======================
$ic-horizontal-form-offset:       $ic-sp*16;
$ic-label-line-height:            1.3;
$ic-radio-checkbox-left-offset:   22px;


// override bootstrap green buttons
$green: #34832b !default;



