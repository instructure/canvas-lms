// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Criterion can open and close the long description dialog 1`] = `"<div><p> a wild paragraph appears </p></div>"`;

exports[`Free-form Rubric with a custom criterion by default renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Free-form Rubric with a custom criterion by default renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Description of criterion
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescriptionDialog
        close={[Function]}
        longDescription=""
        open={false}
      />
    </div>
  </th>
  <td
    className="ratings"
  >
    <Comments
      allowSaving={true}
      assessment={
        Object {
          "comments": "",
          "comments_enabled": true,
          "criterion_id": "_1384",
          "description": "No Marks",
          "editComments": false,
          "id": "blank_2",
          "learning_outcome_id": null,
          "points": Object {
            "text": null,
            "valid": true,
            "value": 0,
          },
        }
      }
      editing={false}
      footer={null}
      large={true}
      savedComments={Array []}
      setComments={[Function]}
      setSaveLater={[Function]}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={true}
      assessing={false}
      assessment={
        Object {
          "comments": "",
          "comments_enabled": true,
          "criterion_id": "_1384",
          "description": "No Marks",
          "editComments": false,
          "id": "blank_2",
          "learning_outcome_id": null,
          "points": Object {
            "text": null,
            "valid": true,
            "value": 0,
          },
        }
      }
      key="points"
      onPointChange={null}
      pointsPossible={8}
    />
  </td>
</tr>
`;

exports[`Free-form Rubric with a custom criterion when assessing renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Free-form Rubric with a custom criterion when assessing renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Description of criterion
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescriptionDialog
        close={[Function]}
        longDescription=""
        open={false}
      />
    </div>
  </th>
  <td
    className="ratings"
  >
    <Comments
      allowSaving={true}
      assessment={
        Object {
          "comments": "",
          "comments_enabled": true,
          "criterion_id": "_1384",
          "description": "No Marks",
          "editComments": false,
          "id": "blank_2",
          "learning_outcome_id": null,
          "points": Object {
            "text": null,
            "valid": true,
            "value": 0,
          },
        }
      }
      editing={true}
      footer={null}
      large={true}
      savedComments={Array []}
      setComments={[Function]}
      setSaveLater={[Function]}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={true}
      assessing={true}
      assessment={
        Object {
          "comments": "",
          "comments_enabled": true,
          "criterion_id": "_1384",
          "description": "No Marks",
          "editComments": false,
          "id": "blank_2",
          "learning_outcome_id": null,
          "points": Object {
            "text": null,
            "valid": true,
            "value": 0,
          },
        }
      }
      key="points"
      onPointChange={[Function]}
      pointsPossible={8}
    />
  </td>
</tr>
`;

exports[`Free-form Rubric with a custom criterion without an assessment renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Free-form Rubric with a custom criterion without an assessment renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Description of criterion
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescriptionDialog
        close={[Function]}
        longDescription=""
        open={false}
      />
    </div>
  </th>
  <td
    className="ratings"
  >
    <Comments
      allowSaving={true}
      assessment={null}
      editing={false}
      footer={null}
      large={true}
      savedComments={Array []}
      setComments={[Function]}
      setSaveLater={[Function]}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={true}
      assessing={false}
      assessment={null}
      key="points"
      onPointChange={null}
      pointsPossible={8}
    />
  </td>
</tr>
`;

exports[`Free-form Rubric with a outcome criterion by default renders the LongDescription sub-component(s) as expected 1`] = `
<Button
  as="button"
  buttonRef={[Function]}
  cursor="pointer"
  fluidWidth={true}
  margin="0"
  onClick={[Function]}
  size="medium"
  type="button"
  variant="link"
>
  <Text
    as="span"
    letterSpacing="normal"
    size="x-small"
    wrap="normal"
  >
    view longer description
  </Text>
</Button>
`;

exports[`Free-form Rubric with a outcome criterion by default renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "sa Sivert.",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Free-form Rubric with a outcome criterion by default renders the OutcomeIcon sub-component(s) as expected 1`] = `
<span>
  <IconOutcomesLine />
   
  <ScreenReaderContent
    as="span"
  >
    This criterion is linked to a Learning Outcome
  </ScreenReaderContent>
</span>
`;

exports[`Free-form Rubric with a outcome criterion by default renders the Threshold sub-component(s) as expected 1`] = `
<Text
  as="span"
  letterSpacing="normal"
  size="x-small"
  weight="normal"
  wrap="normal"
>
  threshold: 3
</Text>
`;

exports[`Free-form Rubric with a outcome criterion by default renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <OutcomeIcon />
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Javel, Isak hadde ogsaa lauvet kraftig og hadde nu en Mængde Lauv av bedste Slag.
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescription
        showLongDescription={[Function]}
      />
      <LongDescriptionDialog
        close={[Function]}
        longDescription="sa Sivert."
        open={false}
      />
    </div>
    <Threshold
      threshold={3}
    />
  </th>
  <td
    className="ratings"
  >
    <Comments
      allowSaving={true}
      assessment={
        Object {
          "above_threshold": false,
          "comments": "I award you no points, and may God have mercy on your soul.",
          "comments_enabled": true,
          "comments_html": "I award you <b>no</b> points, and may God have mercy on your soul.",
          "criterion_id": "7_391",
          "description": "No details",
          "editComments": true,
          "learning_outcome_id": "612",
          "points": Object {
            "text": null,
            "valid": true,
            "value": 0,
          },
        }
      }
      editing={false}
      footer={null}
      large={true}
      savedComments={Array []}
      setComments={[Function]}
      setSaveLater={[Function]}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={false}
      assessing={false}
      assessment={
        Object {
          "above_threshold": false,
          "comments": "I award you no points, and may God have mercy on your soul.",
          "comments_enabled": true,
          "comments_html": "I award you <b>no</b> points, and may God have mercy on your soul.",
          "criterion_id": "7_391",
          "description": "No details",
          "editComments": true,
          "learning_outcome_id": "612",
          "points": Object {
            "text": null,
            "valid": true,
            "value": 0,
          },
        }
      }
      key="points"
      onPointChange={null}
      pointsPossible={3}
    />
  </td>
</tr>
`;

exports[`Free-form Rubric with a outcome criterion when assessing renders the LongDescription sub-component(s) as expected 1`] = `
<Button
  as="button"
  buttonRef={[Function]}
  cursor="pointer"
  fluidWidth={true}
  margin="0"
  onClick={[Function]}
  size="medium"
  type="button"
  variant="link"
>
  <Text
    as="span"
    letterSpacing="normal"
    size="x-small"
    wrap="normal"
  >
    view longer description
  </Text>
</Button>
`;

exports[`Free-form Rubric with a outcome criterion when assessing renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "sa Sivert.",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Free-form Rubric with a outcome criterion when assessing renders the OutcomeIcon sub-component(s) as expected 1`] = `
<span>
  <IconOutcomesLine />
   
  <ScreenReaderContent
    as="span"
  >
    This criterion is linked to a Learning Outcome
  </ScreenReaderContent>
</span>
`;

exports[`Free-form Rubric with a outcome criterion when assessing renders the Threshold sub-component(s) as expected 1`] = `
<Text
  as="span"
  letterSpacing="normal"
  size="x-small"
  weight="normal"
  wrap="normal"
>
  threshold: 3
</Text>
`;

exports[`Free-form Rubric with a outcome criterion when assessing renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <OutcomeIcon />
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Javel, Isak hadde ogsaa lauvet kraftig og hadde nu en Mængde Lauv av bedste Slag.
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescription
        showLongDescription={[Function]}
      />
      <LongDescriptionDialog
        close={[Function]}
        longDescription="sa Sivert."
        open={false}
      />
    </div>
    <Threshold
      threshold={3}
    />
  </th>
  <td
    className="ratings"
  >
    <Comments
      allowSaving={true}
      assessment={
        Object {
          "above_threshold": false,
          "comments": "I award you no points, and may God have mercy on your soul.",
          "comments_enabled": true,
          "comments_html": "I award you <b>no</b> points, and may God have mercy on your soul.",
          "criterion_id": "7_391",
          "description": "No details",
          "editComments": true,
          "learning_outcome_id": "612",
          "points": Object {
            "text": null,
            "valid": true,
            "value": 0,
          },
        }
      }
      editing={true}
      footer={null}
      large={true}
      savedComments={Array []}
      setComments={[Function]}
      setSaveLater={[Function]}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={false}
      assessing={true}
      assessment={
        Object {
          "above_threshold": false,
          "comments": "I award you no points, and may God have mercy on your soul.",
          "comments_enabled": true,
          "comments_html": "I award you <b>no</b> points, and may God have mercy on your soul.",
          "criterion_id": "7_391",
          "description": "No details",
          "editComments": true,
          "learning_outcome_id": "612",
          "points": Object {
            "text": null,
            "valid": true,
            "value": 0,
          },
        }
      }
      key="points"
      onPointChange={[Function]}
      pointsPossible={3}
    />
  </td>
</tr>
`;

exports[`Free-form Rubric with a outcome criterion without an assessment renders the LongDescription sub-component(s) as expected 1`] = `
<Button
  as="button"
  buttonRef={[Function]}
  cursor="pointer"
  fluidWidth={true}
  margin="0"
  onClick={[Function]}
  size="medium"
  type="button"
  variant="link"
>
  <Text
    as="span"
    letterSpacing="normal"
    size="x-small"
    wrap="normal"
  >
    view longer description
  </Text>
</Button>
`;

exports[`Free-form Rubric with a outcome criterion without an assessment renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "sa Sivert.",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Free-form Rubric with a outcome criterion without an assessment renders the OutcomeIcon sub-component(s) as expected 1`] = `
<span>
  <IconOutcomesLine />
   
  <ScreenReaderContent
    as="span"
  >
    This criterion is linked to a Learning Outcome
  </ScreenReaderContent>
</span>
`;

exports[`Free-form Rubric with a outcome criterion without an assessment renders the Threshold sub-component(s) as expected 1`] = `
<Text
  as="span"
  letterSpacing="normal"
  size="x-small"
  weight="normal"
  wrap="normal"
>
  threshold: 3
</Text>
`;

exports[`Free-form Rubric with a outcome criterion without an assessment renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <OutcomeIcon />
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Javel, Isak hadde ogsaa lauvet kraftig og hadde nu en Mængde Lauv av bedste Slag.
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescription
        showLongDescription={[Function]}
      />
      <LongDescriptionDialog
        close={[Function]}
        longDescription="sa Sivert."
        open={false}
      />
    </div>
    <Threshold
      threshold={3}
    />
  </th>
  <td
    className="ratings"
  >
    <Comments
      allowSaving={true}
      assessment={null}
      editing={false}
      footer={null}
      large={true}
      savedComments={Array []}
      setComments={[Function]}
      setSaveLater={[Function]}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={false}
      assessing={false}
      assessment={null}
      key="points"
      onPointChange={null}
      pointsPossible={3}
    />
  </td>
</tr>
`;

exports[`Point Rubric with a custom criterion by default renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Point Rubric with a custom criterion by default renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Description of criterion
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescriptionDialog
        close={[Function]}
        longDescription=""
        open={false}
      />
    </div>
  </th>
  <td
    className="ratings"
  >
    <Ratings
      assessing={false}
      customRatings={Array []}
      defaultMasteryThreshold={8}
      footer={
        <Comments
          allowSaving={true}
          assessment={
            Object {
              "comments": "i'd like to say some things",
              "comments_enabled": true,
              "criterion_id": "_1384",
              "description": "bleh",
              "editComments": true,
              "id": "7_4778",
              "learning_outcome_id": null,
              "points": Object {
                "text": null,
                "valid": true,
                "value": 3.2,
              },
            }
          }
          editing={false}
          footer={null}
          large={false}
          savedComments={Array []}
          setComments={[Function]}
          setSaveLater={[Function]}
        />
      }
      hidePoints={false}
      isSummary={false}
      onPointChange={[Function]}
      points={3.2}
      pointsPossible={8}
      selectedRatingId="7_4778"
      tiers={
        Array [
          Object {
            "criterion_id": "_1384",
            "description": "Full Marks",
            "id": "blank",
            "long_description": "",
            "points": 8,
          },
          Object {
            "criterion_id": "_1384",
            "description": "bleh",
            "id": "7_4778",
            "long_description": "blah",
            "points": 3,
          },
          Object {
            "criterion_id": "_1384",
            "description": "No Marks",
            "id": "blank_2",
            "long_description": "",
            "points": 0,
          },
        ]
      }
      useRange={false}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={true}
      assessing={false}
      assessment={
        Object {
          "comments": "i'd like to say some things",
          "comments_enabled": true,
          "criterion_id": "_1384",
          "description": "bleh",
          "editComments": true,
          "id": "7_4778",
          "learning_outcome_id": null,
          "points": Object {
            "text": null,
            "valid": true,
            "value": 3.2,
          },
        }
      }
      key="points"
      onPointChange={null}
      pointsPossible={8}
    />
  </td>
</tr>
`;

exports[`Point Rubric with a custom criterion when assessing renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Point Rubric with a custom criterion when assessing renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Description of criterion
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescriptionDialog
        close={[Function]}
        longDescription=""
        open={false}
      />
    </div>
  </th>
  <td
    className="ratings"
  >
    <Ratings
      assessing={true}
      customRatings={Array []}
      defaultMasteryThreshold={8}
      footer={
        <Comments
          allowSaving={true}
          assessment={
            Object {
              "comments": "i'd like to say some things",
              "comments_enabled": true,
              "criterion_id": "_1384",
              "description": "bleh",
              "editComments": true,
              "id": "7_4778",
              "learning_outcome_id": null,
              "points": Object {
                "text": null,
                "valid": true,
                "value": 3.2,
              },
            }
          }
          editing={true}
          footer={null}
          large={false}
          savedComments={Array []}
          setComments={[Function]}
          setSaveLater={[Function]}
        />
      }
      hidePoints={false}
      isSummary={false}
      onPointChange={[Function]}
      points={3.2}
      pointsPossible={8}
      selectedRatingId="7_4778"
      tiers={
        Array [
          Object {
            "criterion_id": "_1384",
            "description": "Full Marks",
            "id": "blank",
            "long_description": "",
            "points": 8,
          },
          Object {
            "criterion_id": "_1384",
            "description": "bleh",
            "id": "7_4778",
            "long_description": "blah",
            "points": 3,
          },
          Object {
            "criterion_id": "_1384",
            "description": "No Marks",
            "id": "blank_2",
            "long_description": "",
            "points": 0,
          },
        ]
      }
      useRange={false}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={true}
      assessing={true}
      assessment={
        Object {
          "comments": "i'd like to say some things",
          "comments_enabled": true,
          "criterion_id": "_1384",
          "description": "bleh",
          "editComments": true,
          "id": "7_4778",
          "learning_outcome_id": null,
          "points": Object {
            "text": null,
            "valid": true,
            "value": 3.2,
          },
        }
      }
      key="points"
      onPointChange={[Function]}
      pointsPossible={8}
    />
  </td>
</tr>
`;

exports[`Point Rubric with a custom criterion without an assessment renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Point Rubric with a custom criterion without an assessment renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Description of criterion
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescriptionDialog
        close={[Function]}
        longDescription=""
        open={false}
      />
    </div>
  </th>
  <td
    className="ratings"
  >
    <Ratings
      assessing={false}
      customRatings={Array []}
      defaultMasteryThreshold={8}
      footer={null}
      hidePoints={false}
      isSummary={false}
      onPointChange={[Function]}
      pointsPossible={8}
      tiers={
        Array [
          Object {
            "criterion_id": "_1384",
            "description": "Full Marks",
            "id": "blank",
            "long_description": "",
            "points": 8,
          },
          Object {
            "criterion_id": "_1384",
            "description": "bleh",
            "id": "7_4778",
            "long_description": "blah",
            "points": 3,
          },
          Object {
            "criterion_id": "_1384",
            "description": "No Marks",
            "id": "blank_2",
            "long_description": "",
            "points": 0,
          },
        ]
      }
      useRange={false}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={true}
      assessing={false}
      assessment={null}
      key="points"
      onPointChange={null}
      pointsPossible={8}
    />
  </td>
</tr>
`;

exports[`Point Rubric with a outcome criterion by default renders the LongDescription sub-component(s) as expected 1`] = `
<Button
  as="button"
  buttonRef={[Function]}
  cursor="pointer"
  fluidWidth={true}
  margin="0"
  onClick={[Function]}
  size="medium"
  type="button"
  variant="link"
>
  <Text
    as="span"
    letterSpacing="normal"
    size="x-small"
    wrap="normal"
  >
    view longer description
  </Text>
</Button>
`;

exports[`Point Rubric with a outcome criterion by default renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "sa Sivert.",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Point Rubric with a outcome criterion by default renders the OutcomeIcon sub-component(s) as expected 1`] = `
<span>
  <IconOutcomesLine />
   
  <ScreenReaderContent
    as="span"
  >
    This criterion is linked to a Learning Outcome
  </ScreenReaderContent>
</span>
`;

exports[`Point Rubric with a outcome criterion by default renders the Threshold sub-component(s) as expected 1`] = `
<Text
  as="span"
  letterSpacing="normal"
  size="x-small"
  weight="normal"
  wrap="normal"
>
  threshold: 3
</Text>
`;

exports[`Point Rubric with a outcome criterion by default renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <OutcomeIcon />
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Javel, Isak hadde ogsaa lauvet kraftig og hadde nu en Mængde Lauv av bedste Slag.
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescription
        showLongDescription={[Function]}
      />
      <LongDescriptionDialog
        close={[Function]}
        longDescription="sa Sivert."
        open={false}
      />
    </div>
    <Threshold
      threshold={3}
    />
  </th>
  <td
    className="ratings"
  >
    <Ratings
      assessing={false}
      customRatings={Array []}
      defaultMasteryThreshold={3}
      footer={
        <Comments
          allowSaving={true}
          assessment={
            Object {
              "above_threshold": false,
              "comments": "here too",
              "comments_enabled": true,
              "criterion_id": "7_391",
              "description": "Naturligvis hadde han ogsaa længe forstaat hvorfor Inger hadde.",
              "editComments": true,
              "id": "7_6639",
              "learning_outcome_id": "612",
              "points": Object {
                "text": null,
                "valid": true,
                "value": 3,
              },
            }
          }
          editing={false}
          footer={null}
          large={false}
          savedComments={Array []}
          setComments={[Function]}
          setSaveLater={[Function]}
        />
      }
      hidePoints={false}
      isSummary={false}
      onPointChange={[Function]}
      points={3}
      pointsPossible={3}
      selectedRatingId="7_6639"
      tiers={
        Array [
          Object {
            "criterion_id": "7_391",
            "description": "Naturligvis hadde han ogsaa længe forstaat hvorfor Inger hadde ordet om.",
            "id": "7_6639",
            "long_description": "",
            "points": 3,
          },
          Object {
            "criterion_id": "7_391",
            "description": "De levet tæt hos hverandre som Dyr i Skogen, de sov og spiste, det lidde saa.",
            "id": "7_194",
            "long_description": "",
            "points": 2,
          },
          Object {
            "criterion_id": "7_391",
            "description": "Et graat og rødt Uldtørklæde med Frynser var pragtfuldt paa hendes mørke Haar.",
            "id": "7_8479",
            "long_description": "",
            "points": 1,
          },
        ]
      }
      useRange={false}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={false}
      assessing={false}
      assessment={
        Object {
          "above_threshold": false,
          "comments": "here too",
          "comments_enabled": true,
          "criterion_id": "7_391",
          "description": "Naturligvis hadde han ogsaa længe forstaat hvorfor Inger hadde.",
          "editComments": true,
          "id": "7_6639",
          "learning_outcome_id": "612",
          "points": Object {
            "text": null,
            "valid": true,
            "value": 3,
          },
        }
      }
      key="points"
      onPointChange={null}
      pointsPossible={3}
    />
  </td>
</tr>
`;

exports[`Point Rubric with a outcome criterion when assessing renders the LongDescription sub-component(s) as expected 1`] = `
<Button
  as="button"
  buttonRef={[Function]}
  cursor="pointer"
  fluidWidth={true}
  margin="0"
  onClick={[Function]}
  size="medium"
  type="button"
  variant="link"
>
  <Text
    as="span"
    letterSpacing="normal"
    size="x-small"
    wrap="normal"
  >
    view longer description
  </Text>
</Button>
`;

exports[`Point Rubric with a outcome criterion when assessing renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "sa Sivert.",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Point Rubric with a outcome criterion when assessing renders the OutcomeIcon sub-component(s) as expected 1`] = `
<span>
  <IconOutcomesLine />
   
  <ScreenReaderContent
    as="span"
  >
    This criterion is linked to a Learning Outcome
  </ScreenReaderContent>
</span>
`;

exports[`Point Rubric with a outcome criterion when assessing renders the Threshold sub-component(s) as expected 1`] = `
<Text
  as="span"
  letterSpacing="normal"
  size="x-small"
  weight="normal"
  wrap="normal"
>
  threshold: 3
</Text>
`;

exports[`Point Rubric with a outcome criterion when assessing renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <OutcomeIcon />
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Javel, Isak hadde ogsaa lauvet kraftig og hadde nu en Mængde Lauv av bedste Slag.
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescription
        showLongDescription={[Function]}
      />
      <LongDescriptionDialog
        close={[Function]}
        longDescription="sa Sivert."
        open={false}
      />
    </div>
    <Threshold
      threshold={3}
    />
  </th>
  <td
    className="ratings"
  >
    <Ratings
      assessing={true}
      customRatings={Array []}
      defaultMasteryThreshold={3}
      footer={
        <Comments
          allowSaving={true}
          assessment={
            Object {
              "above_threshold": false,
              "comments": "here too",
              "comments_enabled": true,
              "criterion_id": "7_391",
              "description": "Naturligvis hadde han ogsaa længe forstaat hvorfor Inger hadde.",
              "editComments": true,
              "id": "7_6639",
              "learning_outcome_id": "612",
              "points": Object {
                "text": null,
                "valid": true,
                "value": 3,
              },
            }
          }
          editing={true}
          footer={null}
          large={false}
          savedComments={Array []}
          setComments={[Function]}
          setSaveLater={[Function]}
        />
      }
      hidePoints={false}
      isSummary={false}
      onPointChange={[Function]}
      points={3}
      pointsPossible={3}
      selectedRatingId="7_6639"
      tiers={
        Array [
          Object {
            "criterion_id": "7_391",
            "description": "Naturligvis hadde han ogsaa længe forstaat hvorfor Inger hadde ordet om.",
            "id": "7_6639",
            "long_description": "",
            "points": 3,
          },
          Object {
            "criterion_id": "7_391",
            "description": "De levet tæt hos hverandre som Dyr i Skogen, de sov og spiste, det lidde saa.",
            "id": "7_194",
            "long_description": "",
            "points": 2,
          },
          Object {
            "criterion_id": "7_391",
            "description": "Et graat og rødt Uldtørklæde med Frynser var pragtfuldt paa hendes mørke Haar.",
            "id": "7_8479",
            "long_description": "",
            "points": 1,
          },
        ]
      }
      useRange={false}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={false}
      assessing={true}
      assessment={
        Object {
          "above_threshold": false,
          "comments": "here too",
          "comments_enabled": true,
          "criterion_id": "7_391",
          "description": "Naturligvis hadde han ogsaa længe forstaat hvorfor Inger hadde.",
          "editComments": true,
          "id": "7_6639",
          "learning_outcome_id": "612",
          "points": Object {
            "text": null,
            "valid": true,
            "value": 3,
          },
        }
      }
      key="points"
      onPointChange={[Function]}
      pointsPossible={3}
    />
  </td>
</tr>
`;

exports[`Point Rubric with a outcome criterion without an assessment renders the LongDescription sub-component(s) as expected 1`] = `
<Button
  as="button"
  buttonRef={[Function]}
  cursor="pointer"
  fluidWidth={true}
  margin="0"
  onClick={[Function]}
  size="medium"
  type="button"
  variant="link"
>
  <Text
    as="span"
    letterSpacing="normal"
    size="x-small"
    wrap="normal"
  >
    view longer description
  </Text>
</Button>
`;

exports[`Point Rubric with a outcome criterion without an assessment renders the LongDescriptionDialog sub-component(s) as expected 1`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={null}
  insertAt="bottom"
  label="Criterion Long Description"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  overflow="scroll"
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
  variant="default"
>
  <ModalHeader
    variant="default"
  >
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Criterion Long Description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
    variant="default"
  >
    <Text
      as="span"
      letterSpacing="normal"
      lineHeight="double"
      size="medium"
      wrap="normal"
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "sa Sivert.",
          }
        }
      />
    </Text>
  </ModalBody>
</Modal>
`;

exports[`Point Rubric with a outcome criterion without an assessment renders the OutcomeIcon sub-component(s) as expected 1`] = `
<span>
  <IconOutcomesLine />
   
  <ScreenReaderContent
    as="span"
  >
    This criterion is linked to a Learning Outcome
  </ScreenReaderContent>
</span>
`;

exports[`Point Rubric with a outcome criterion without an assessment renders the Threshold sub-component(s) as expected 1`] = `
<Text
  as="span"
  letterSpacing="normal"
  size="x-small"
  weight="normal"
  wrap="normal"
>
  threshold: 3
</Text>
`;

exports[`Point Rubric with a outcome criterion without an assessment renders the root component as expected 1`] = `
<tr
  className="rubric-criterion"
>
  <th
    className="description-header"
    scope="row"
  >
    <div
      className="description react-rubric-cell"
    >
      <OutcomeIcon />
      <Text
        as="span"
        letterSpacing="normal"
        size="small"
        weight="normal"
        wrap="normal"
      >
        Javel, Isak hadde ogsaa lauvet kraftig og hadde nu en Mængde Lauv av bedste Slag.
      </Text>
    </div>
    <div
      className="long-description"
    >
      <LongDescription
        showLongDescription={[Function]}
      />
      <LongDescriptionDialog
        close={[Function]}
        longDescription="sa Sivert."
        open={false}
      />
    </div>
    <Threshold
      threshold={3}
    />
  </th>
  <td
    className="ratings"
  >
    <Ratings
      assessing={false}
      customRatings={Array []}
      defaultMasteryThreshold={3}
      footer={null}
      hidePoints={false}
      isSummary={false}
      onPointChange={[Function]}
      pointsPossible={3}
      tiers={
        Array [
          Object {
            "criterion_id": "7_391",
            "description": "Naturligvis hadde han ogsaa længe forstaat hvorfor Inger hadde ordet om.",
            "id": "7_6639",
            "long_description": "",
            "points": 3,
          },
          Object {
            "criterion_id": "7_391",
            "description": "De levet tæt hos hverandre som Dyr i Skogen, de sov og spiste, det lidde saa.",
            "id": "7_194",
            "long_description": "",
            "points": 2,
          },
          Object {
            "criterion_id": "7_391",
            "description": "Et graat og rødt Uldtørklæde med Frynser var pragtfuldt paa hendes mørke Haar.",
            "id": "7_8479",
            "long_description": "",
            "points": 1,
          },
        ]
      }
      useRange={false}
    />
  </td>
  <td
    className="criterion_points"
  >
    <Points
      allowExtraCredit={false}
      assessing={false}
      assessment={null}
      key="points"
      onPointChange={null}
      pointsPossible={3}
    />
  </td>
</tr>
`;
