<% @active_tab = "terms" %>
<% content_for :page_title do %><%= t :page_title, "%{account} Terms", :account => @context.name %><% end %>
<% content_for :page_header do %>
  <h1><%= t 'titles.enrollment_terms', "Enrollment Terms" %></h1>
<% end %>

<% content_for :page_subhead do %>
  <h2><%= @context.name %></h2>
<% end %>

<style>
#wrapper-container {
  min-width: 1100px;
}
.term .edit_term {
  display: none;
}
.term.editing_term .show_term {
  display: none;
}
.term.editing_term .edit_term {
  display: block;
}
#terms .term td.header {
  font-size: 1.2em;
  padding-right: 20px;
}
.term .permissions {
  font-size: 0.8em;
}
#terms {
  border-collapse: collapse;
  width: 100%;
}
#terms td {
  vertical-align: top;
}
#terms td.header, #terms td.permissions, #terms td.links {
  border-bottom: 1px solid #aaa;
  padding: 2px 0;
}
#terms td.links {
  padding-left: 5px;
}
#terms form.enrollment_term_form {
  width: 80%;
}
#terms form.enrollment_term_form .control-group {
  margin-bottom: 0px;
}
#terms form.enrollment_term_form label {
  margin-bottom: 0px;
}
#terms form.enrollment_term_form .edit_term_buttons {
  text-align: right;
  width: 286px;
}
</style>

<% js_block do %>
<script>
require([
  'i18nObj' /* I18n.t */,
  'jquery' /* $ */,
  'jquery.instructure_date_and_time' /* parseFromISO, date_field */,
  'jquery.instructure_forms' /* formSubmit, fillFormData, getFormData, formErrors */,
  'jquery.instructure_misc_helpers' /* replaceTags, /\$\.underscore/ */,
  'jquery.instructure_misc_plugins' /* confirmDelete */,
  'jquery.templateData' /* fillTemplateData */
], function(I18n, $) {

$(document).ready(function() {
  $(".edit_term_link").click(function(event) {
    event.preventDefault();
    $(this).parents(".term").addClass('editing_term');
    $(this).parents(".term").find(":text:visible:first").focus().select();
    $(this).parents(".term").find(".date_field").not(".already_has_date_field").addClass("already_has_date_field").date_field();
  });
  $(".term .cancel_button").click(function() {
    $(this).parents(".term").removeClass('editing_term');
    if($(this).parents(".term").attr('id') == 'term_new') {
      $(this).parents(".term").remove();
    }
  });
  $(".cant_delete_term_link").click(function(event) {
    event.preventDefault();
    alert(<%= jt('messages.classes_in_term', "You can't delete a term that still has classes in it.") %>);
  });
  $(".delete_term_link").click(function(event) {
    event.preventDefault();
    var url = $(this).parents(".term").find(".enrollment_term_form").attr('action');
    $(this).parents(".term").confirmDelete({
      url: url,
      message: <%= jt('prompts.delete', "Are you sure you want to delete this term?") %>,
      success: function() {
        $(this).fadeOut(function() {
          $(this).remove();
        });
      }
    });
  });
  $(".enrollment_term_form").formSubmit({
    processData: function(data) {
      var permissions = $(this).parents("tr").find(".permissions").getFormData({object_name: 'enrollment_term'});
      $.each(permissions, function(key, val) {
        if (key.match(/\[(start)|(end)_at\]/)) {
          permissions[key] = $.datetime.process(val);
        }
      });
      return $.extend(permissions, data);
    },
    beforeSubmit: function(data) {
      $(this).find("button").attr('disabled', true);
      $(this).find(".submit_button").text(<%= jt('messages.submitting', "Submitting...") %>);
    },
    success: function(data) {
      var term = data.enrollment_term;
      var $tr = $(this).parents(".term")
      $(this).find("button").attr('disabled', false);
      $(this).find(".submit_button").text("Update Term")
      var url = $.replaceTags($(".term_url").attr('href'), 'id', term.id);
      $(this).attr('action', url);
      $(this).attr('method', 'PUT');
      for(var idx in term.enrollment_dates_overrides) {
        var override = term.enrollment_dates_overrides[idx].enrollment_dates_override;
        var type_string = $.underscore(override.enrollment_type)
        term[type_string + "_start_at"] = $.parseFromISO(override.start_at).date_formatted || <%= jt('date.term_start', "term start") %>;
        term[type_string + "_end_at"] = $.parseFromISO(override.end_at).date_formatted || <%= jt('date.term_end', "term end") %>;
        term['enrollment_term[overrides][' + type_string + '][start_at]'] = $.parseFromISO(override.start_at).date_formatted;
        term['enrollment_term[overrides][' + type_string + '][end_at]'] = $.parseFromISO(override.end_at).date_formatted;
      }
      term.start_at = $.parseFromISO(term.start_at).date_formatted || <%= jt('date.unspecified', "whenever") %>;
      term.end_at = $.parseFromISO(term.end_at).date_formatted || <%= jt('date.unspecified', "whenever") %>;
      $tr.fillTemplateData({
        data: term
      });
      $tr.attr('id', 'term_' + term.id);
      $tr.fillFormData(data, {object_name: 'enrollment_term'});
      $tr.removeClass('editing_term');
    },
    error: function(data) {
      $(this).find("button").attr('disabled', false);
      $(this).formErrors(data);
      $(this).find(".submit_button").text(<%= jt('errors.submit', "Error Submitting") %>)
    }
  });
  $(".add_term_link").click(function(event) {
    event.preventDefault();
    if($("#term_new").length > 0) { return; }
    var $term = $("#term_blank").clone(true).attr('id', 'term_new');
    $("#terms").prepend($term.show());
    $term.find(".edit_term_link").click();
  });
});
});
</script>
<% end %>
<h2><%= t 'titles.term_details', "Term Details" %></h2>
<div style="margin: 0 10px; width: auto;">
<table id="terms">
  <% @terms.each do |term| %>
    <%= render :partial => "term", :object => term %>
  <% end %>
  <%= render :partial => "term", :object => nil %>
  <tr>
    <td colspan="3">
      <a href="#" class="icon-add add_term_link"><%= t 'links.add_new_term', "Add New Term" %></a>
    </td>
  </tr>
</table>
</div>
<a href="<%= context_url(@context, :context_term_url, "{{ id }}") %>" class="term_url" style="display: none;">&nbsp;</a>
