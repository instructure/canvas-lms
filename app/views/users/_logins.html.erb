<%
# Copyright (C) 2011 - present Instructure, Inc.
#
# This file is part of Canvas.
#
# Canvas is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, version 3 of the License.
#
# Canvas is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.
%>

<% extension_exclusions = %i[crypted_password password_salt persistence_token single_access_token single_access_token perishable_token reset_password_token].freeze %>

<% if can_do(@user, @current_user, :manage, :manage_user_details) %>
  <% css_bundle :user_logins %>
  <% js_bundle :user_logins %>
  <% js_env :PASSWORD_POLICY => (@domain_root_account.try(:password_policy) || {}) %>
  <%
    if can_do(Account.site_admin, @current_user, :manage_user_logins)
      js_env :PASSWORD_POLICIES => Hash[Account.root_accounts.active.non_shadow.map{ |a| [a.id, a.password_policy]}]
      js_env :ACCOUNT_SELECT_OPTIONS => Account.root_accounts
                .active
                .non_shadow
                .map { |a| {label:(a.name || t("Unnamed Account (%{id})", id: a.id)), value: a.id} }
                .sort_by(&:first)
    end
  %>
  <fieldset
    id="login_information"
    class="responsive"
  >
    <legend>
      <h4 class="profileHeader">
        <%= t('titles.logins', 'Login Information') %>
      </h4>
    </legend>
    <table class="ic-Table">
      <% pseudonyms = @user.pseudonyms_visible_to(@current_user) + [nil] %>
      <% pseudonyms.each do |pseudonym| %>
        <tr class="login<%= ' blank' unless pseudonym %>" <%= raw %Q(style="display: none") unless pseudonym %>>
          <td class="sso-icon" <%= raw %Q(data-pseudonym-id="#{pseudonym.id}") if pseudonym %>>
            <% if (partial = sso_icon_exists?(pseudonym)) %>
              <%= render(partial:, formats: [:svg]) %>
              <span class="screenreader-only">
                <%= t("This login is for %{provider}", provider: pseudonym.authentication_provider.class.display_name) %>
              </span>
            <% end %>
          </td>
          <th class='overview' scope='row'>
            <b class='unique_id'><%= pseudonym && pseudonym.unique_id %></b>
            <% if pseudonym && ((pseudonym.sis_user_id && can_do(pseudonym.account, @current_user, :read_sis)) || can_do(pseudonym, @current_user, :manage_sis)) %>
              <div>
                <%= before_label('sis_id', 'SIS ID') %> <span id="sis_user_id_<%= pseudonym.id %>" class="sis_user_id"><%= pseudonym.sis_user_id %></span>
              </div>
              <div style="display:none" class="can_edit_sis_user_id"><%= can_do(pseudonym, @current_user, :manage_sis) %></div>
            <% end %>
            <% if pseudonym && ((pseudonym.integration_id && can_do(pseudonym.account, @current_user, :read_sis)) || can_do(pseudonym, @current_user, :manage_sis)) %>
                <div>
                  <%= before_label('integration_id', 'Integration ID') %> <span id="integration_id_<%= pseudonym.id %>" class="integration_id"><%= pseudonym.integration_id %></span>
                </div>
            <% end %>
          </th>
          <td class='account'>
            <% if pseudonym&.account == @domain_root_account %>
              <%= link_to(pseudonym.account.name, account_url(pseudonym.account), class: 'account_name') %>
            <% elsif pseudonym %>
              <% pseudonym.shard.activate do %>
                <%= link_to(pseudonym.account.name, account_user_url(pseudonym.account,
                                                                     pseudonym.user,
                                                                     host: HostUrl.context_host(pseudonym.account)), class: 'account_name') %>
              <% end %>
            <% else %>
              <%= link_to(nbsp, account_url("{{ account_id }}"), class: 'account_name') %>
            <% end %>
          </td>
          <td class='details'>
            <%= render partial: 'users/last_login', locals: { pseudonym: pseudonym } if pseudonyms.length > 2 && pseudonym %>
          </td>
          <% if !pseudonym || can_do(pseudonym, @current_user, :update) %>
            <td class='links <%= 'passwordable' if pseudonym && can_do(pseudonym, @current_user, :change_password) %> <%= 'delegated-auth' if pseudonym && !pseudonym.account.canvas_authentication? %>'>
              <a href="#" rel="<%= user_pseudonym_url(@user.id, pseudonym ? pseudonym.id : "{{ id }}") %>" class="edit_pseudonym_link" data-account-id="<%= pseudonym.account.id if pseudonym %>"><i class="icon-edit standalone-icon"></i></a>
              <a href="#" rel="<%= user_pseudonym_url(@user.id, pseudonym ? pseudonym.id : "{{ id }}") %>" class="delete_pseudonym_link" style="<%= hidden if pseudonyms.length <= 2 || (pseudonym && !can_do(pseudonym, @current_user, :delete)) %>"><i class="icon-end standalone-icon"></i></a>
              <div id="edit_pseudonym_mount_point"></div>
            </td>
          <% else %>
            <td>&nbsp;</td>
          <% end %>
        </tr>
      <% end %>
      <% new_pseudonym = @user.pseudonyms.build(account: @domain_root_account) %>
      <% can_add_pseudonym = can_do(new_pseudonym, @current_user, :create) %>
      <% can_reset_mfa = @user.otp_secret_key && can_do(@user, @current_user, :reset_mfa) %>
      <% if can_add_pseudonym || can_reset_mfa %>
        <tr class="add_holder">
          <td colspan="5">
            <% if can_add_pseudonym %>
              <a href="#" rel="<%= user_pseudonyms_url(@user.id) %>" data-can-manage-sis="<%= can_do(new_pseudonym, @current_user, :manage_sis) %>"  class="add_pseudonym_link"><%= t('add_login', 'Add Login') %></a>
              <div id="add_pseudonym_mount_point"></div>
            <% end %>
            <% if can_add_pseudonym && can_reset_mfa %> | <% end %>
            <% if can_reset_mfa %>
              <a href="<%= disable_mfa_path(@user) %>" class="reset_mfa_link"><%=  t('reset_mfa', "Reset Multi-Factor Authentication") %></a>
            <% end %>
          </td>
        </tr>
      <% end %>
    </table>
    <div class='inst-extension-login-information' data-extension-details="<%= pseudonyms&.to_json(except: extension_exclusions) %>"></div>
  </fieldset>
<% end %>
