<%-
# Copyright (C) 2012 - present Instructure, Inc.
#
# This file is part of Canvas.
#
# Canvas is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, version 3 of the License.
#
# Canvas is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

-%><!DOCTYPE html>
<html class="scripts-not-loaded" dir="<%= I18n.rtl? ? 'rtl' : 'ltr' %>"   lang=<%= raw I18n.locale.to_json %>>
<head>
  <meta charset="utf-8">
  <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin>
  <link href="https://fonts.googleapis.com/css?family=Lato:300,400,400i,700&amp;subset=latin-ext&amp;display=swap" rel="stylesheet">
  <% unless params && (params[:controller]&.starts_with?('login/') || params[:controller]&.starts_with?('oauth'))  # some windows apps need to do the oauth login dance from an ie11 webview %>
    <script>if (navigator.userAgent.match(/(MSIE|Trident\/)/)) location.replace('/ie-is-not-supported.html')</script>
  <% end %>
  <%=
    # polyfill browsers that don't have a baseline of features we use like Promise or Object.assign
    polyfill_url = "/ie11-polyfill.js"
    fetch_polyfill_url = 'https://cdnjs.cloudflare.com/ajax/libs/fetch/2.0.4/fetch.min.js'
    if request.user_agent.to_s =~ /Trident\/7.0.*rv:11/i
      # If it looks like IE11, assume they are going to need the polyfill
      # and serve it to them in the more performant way
      javascript_include_tag(polyfill_url, fetch_polyfill_url)
    else
      # For other browsers, feature-detect for all the stuff we polyfill and
      # still provide a fallback if they don't have it.
      # The crazy string concatenation in the document.write is to trick Chrome
      # into not preemptively downloading it anyway.

      # Always give edge <= 17 the fetch polyfill to work around https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/18775440/
      javascript_tag(%(
!function(){
  function get(u){document.write('<scr'+'ipt src="'+ u +'"></sc'+'ript>')}
  var o,s,v;
  if (!(window.Promise && Object.assign && Object.values && [].find && [].includes && (o={},s=Symbol(),v={},o[s]=v,o[s]===v) && (function f(){}).bind().name==='bound f')) {
    get("#{javascript_path(polyfill_url)}");
  }
  if (!window.fetch) get("#{fetch_polyfill_url}");
}();
      ))
    end
  %>
  <%= browser_performance_monitor_embed %>
  <%= favicon_link_tag(favicon) %>
  <%= favicon_link_tag(brand_variable('ic-brand-apple-touch-icon'), rel: 'apple-touch-icon', type: nil) %>
  <%= stylesheet_link_tag(active_brand_config_url('css'), media: "all") %>
  <%= yield :head %>
  <%= include_custom_meta_tags %>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="theme-color" content="<%= brand_variable('ic-brand-primary') %>">
  <%= benchmark("include_css_bundles") { include_css_bundles } %>
  <%= include_account_css %>
  <script>
    <%#
      listen for any clicks on links that have href="#" or data-method set and queue them to be fired on dom ready.
      note: the events targeted for a[data-method] elems don't get properly replayed, but
      at least we can gobble them up here to prevent errors.
    %>
    function _earlyClick(e){
      var c = e.target
      while (c && c.ownerDocument) {
        if (c.getAttribute('href') == '#' || c.getAttribute('data-method')) {
          e.preventDefault()
          (_earlyClick.clicks = _earlyClick.clicks || []).push(c)
          break
        }
        c = c.parentNode
      }
    }
    document.addEventListener('click', _earlyClick)
  </script>

  <% js_bundle :navigation_header unless @headers == false %>

  <% js_env(active_context_tab: get_active_tab) %>
  <script>
    INST = <%= benchmark("rendering INST") { raw(inst_env.to_json) } %>;
    ENV = <%= benchmark("rendering ENV") { raw(render_js_env) } %>;
  </script>

  <%= benchmark("include_head_js") { include_head_js } %>
  <% @xhrs_to_prefetch_from_controller&.each do |args| %>
    <%= prefetch_xhr(*args) %>
  <% end %>
  <% @content_for_head&.each do |string| %>
    <%= string %>
  <% end %>
  <title><%= @page_title || (yield :page_title).presence || t('default_page_title', "Canvas LMS") %></title>
  <%= render partial: 'layouts/google_analytics_snippet' %>

  <!-- fullstory snippet -->
  <% if fullstory_enabled_for_session?(session) %>
    <%= render :partial => "shared/fullstory_snippet" %>
  <% end %>
</head>
